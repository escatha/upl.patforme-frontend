{"ast":null,"code":"import React,{createContext,useContext,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const UserContext=/*#__PURE__*/createContext(undefined);export const UserProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const login=userData=>{setUser(userData);console.log(\"User connecté :\",userData);};const logout=()=>{setUser(null);// éventuellement supprimer le token localStorage ici\n};return/*#__PURE__*/_jsx(UserContext.Provider,{value:{user,login,logout,setUser},children:children});};export const useUser=()=>{const context=useContext(UserContext);if(!context){throw new Error(\"useUser must be used within a UserProvider\");}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","UserContext","undefined","UserProvider","_ref","children","user","setUser","login","userData","console","log","logout","Provider","value","useUser","context","Error"],"sources":["C:/Users/HP/Desktop/upl.patforme/frontend/src/contexts/UserContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\n\r\nexport interface User {\r\n  id: string;\r\n  name: string;\r\n  username: string;\r\n  matricule: string;\r\n  role: \"student\" | \"teacher\" | \"admin\";\r\n  faculty: string;\r\n}\r\n\r\nexport interface UserContextType {\r\n  user: User | null;\r\n  login: (user: User) => void;\r\n  logout: () => void; \r\n    setUser: (user: User | null) => void; // ✅ AJOUTÉ ICI\r\n}\r\n\r\nconst UserContext = createContext<UserContextType | undefined>(undefined);\r\n\r\nexport const UserProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n\r\n  const login = (userData: User) => {\r\n    setUser(userData);\r\n    console.log(\"User connecté :\", userData)\r\n    \r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    // éventuellement supprimer le token localStorage ici\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, login, logout,setUser }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useUser = (): UserContextType => {\r\n  const context = useContext(UserContext);\r\n  if (!context) {\r\n    throw new Error(\"useUser must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAkBnE,KAAM,CAAAC,WAAW,cAAGL,aAAa,CAA8BM,SAAS,CAAC,CAEzE,MAAO,MAAM,CAAAC,YAAqD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChF,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAc,IAAI,CAAC,CAEnD,KAAM,CAAAU,KAAK,CAAIC,QAAc,EAAK,CAChCF,OAAO,CAACE,QAAQ,CAAC,CACjBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAEF,QAAQ,CAAC,CAE1C,CAAC,CAED,KAAM,CAAAG,MAAM,CAAGA,CAAA,GAAM,CACnBL,OAAO,CAAC,IAAI,CAAC,CACb;AACF,CAAC,CAED,mBACEP,IAAA,CAACC,WAAW,CAACY,QAAQ,EAACC,KAAK,CAAE,CAAER,IAAI,CAAEE,KAAK,CAAEI,MAAM,CAACL,OAAQ,CAAE,CAAAF,QAAA,CAC1DA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAU,OAAO,CAAGA,CAAA,GAAuB,CAC5C,KAAM,CAAAC,OAAO,CAAGnB,UAAU,CAACI,WAAW,CAAC,CACvC,GAAI,CAACe,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,4CAA4C,CAAC,CAC/D,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}