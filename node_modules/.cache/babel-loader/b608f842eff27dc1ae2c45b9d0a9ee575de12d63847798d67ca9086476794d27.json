{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\upl.patforme\\\\frontend\\\\src\\\\pages\\\\TeacherDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useUser } from '../contexts/UserContext';\nimport QuestionnaireList from '../components/QuestionnaireList';\n\n// Interfaces\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TeacherDashboard = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const {\n    faculty\n  } = useParams();\n  const {\n    setUser\n  } = useUser();\n  if (!user || !user.id) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Utilisateur non connect\\xE9 ou invalide.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  }\n  const [questionnaires, setQuestionnaires] = useState([]);\n  const [currentQuestionnaire, setCurrentQuestionnaire] = useState(null);\n  const [isCreatingNew, setIsCreatingNew] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const showToast = (title, description) => {\n    alert(`${title}: ${description}`);\n  };\n  const createNewQuestionnaire = () => {\n    const newQuestionnaire = {\n      id: Date.now().toString(),\n      title: '',\n      subject: '',\n      questions: [],\n      status: 'draft',\n      teacherId: user.id,\n      duration: 60,\n      faculty: user.faculty\n    };\n    setCurrentQuestionnaire(newQuestionnaire);\n    setIsCreatingNew(true);\n  };\n  const addQuestion = () => {\n    if (!currentQuestionnaire) return;\n    const newQuestion = {\n      id: Date.now().toString(),\n      question: '',\n      options: ['', '', '', ''],\n      correctAnswer: 0\n    };\n    setCurrentQuestionnaire({\n      ...currentQuestionnaire,\n      questions: [...currentQuestionnaire.questions, newQuestion]\n    });\n  };\n  const updateQuestion = (questionId, field, value) => {\n    if (!currentQuestionnaire) return;\n    setCurrentQuestionnaire({\n      ...currentQuestionnaire,\n      questions: currentQuestionnaire.questions.map(q => q.id === questionId ? {\n        ...q,\n        [field]: value\n      } : q)\n    });\n  };\n  const updateQuestionOption = (questionId, optionIndex, value) => {\n    if (!currentQuestionnaire) return;\n    setCurrentQuestionnaire({\n      ...currentQuestionnaire,\n      questions: currentQuestionnaire.questions.map(q => q.id === questionId ? {\n        ...q,\n        options: q.options.map((opt, idx) => idx === optionIndex ? value : opt)\n      } : q)\n    });\n  };\n  const removeQuestion = questionId => {\n    if (!currentQuestionnaire) return;\n    if (window.confirm('Êtes-vous sûr de vouloir supprimer cette question ?')) {\n      setCurrentQuestionnaire({\n        ...currentQuestionnaire,\n        questions: currentQuestionnaire.questions.filter(q => q.id !== questionId)\n      });\n    }\n  };\n  const saveQuestionnaire = () => {\n    if (!currentQuestionnaire) return;\n    if (!currentQuestionnaire.title.trim() || !currentQuestionnaire.subject.trim()) {\n      return showToast('Erreur', 'Veuillez remplir le titre et la matière');\n    }\n    if (currentQuestionnaire.questions.length === 0) {\n      return showToast('Erreur', 'Veuillez ajouter au moins une question');\n    }\n    const incomplete = currentQuestionnaire.questions.some(q => !q.question.trim() || q.options.some(opt => !opt.trim()));\n    if (incomplete) {\n      return showToast('Erreur', 'Veuillez compléter toutes les questions et options');\n    }\n    if (isCreatingNew) {\n      setQuestionnaires(prev => [...prev, currentQuestionnaire]);\n    } else {\n      setQuestionnaires(prev => prev.map(q => q.id === currentQuestionnaire.id ? currentQuestionnaire : q));\n    }\n    showToast('Succès', 'Questionnaire sauvegardé');\n    setCurrentQuestionnaire(null);\n    setIsCreatingNew(false);\n  };\n  const submitQuestionnaire = async questionnaire => {\n    if (!questionnaire.title.trim() || !questionnaire.subject.trim() || !questionnaire.teacherId) {\n      return showToast('Erreur', 'Champs requis manquants.');\n    }\n    if (questionnaire.questions.length === 0) {\n      return showToast('Erreur', 'Veuillez ajouter au moins une question.');\n    }\n    try {\n      const payload = {\n        title: questionnaire.title,\n        subject: questionnaire.subject,\n        duration: questionnaire.duration,\n        faculty: questionnaire.faculty,\n        teacherId: questionnaire.teacherId,\n        teacherName: user.name,\n        questions: questionnaire.questions.map(q => ({\n          question_text: q.question,\n          options: q.options,\n          correct_answer: q.correctAnswer\n        }))\n      };\n      const response = await fetch('http://localhost:3001/api/questionnaires/submit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        return showToast('Erreur', errorText);\n      }\n      setQuestionnaires(prev => prev.map(q => q.id === questionnaire.id ? {\n        ...questionnaire,\n        status: 'submitted',\n        submittedAt: new Date().toISOString()\n      } : q));\n      showToast('Succès', 'Questionnaire soumis avec succès !');\n      setCurrentQuestionnaire(null);\n    } catch (error) {\n      console.error('Erreur dans submitQuestionnaire :', error);\n      showToast('Erreur', 'Échec de la soumission du questionnaire.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Bienvenue \", user.name, \" \\uD83D\\uDC4B\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Facult\\xE9\\xA0: \", user.faculty]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onLogout,\n        children: \"D\\xE9connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionnaireList, {\n      faculty: user.faculty\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createNewQuestionnaire,\n        children: \"Cr\\xE9er un nouveau questionnaire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Rechercher un questionnaire...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mes Questionnaires\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), questionnaires.filter(q => q.title.toLowerCase().includes(searchTerm.toLowerCase())).map(q => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionnaire-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: q.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Mati\\xE8re\\xA0: \", q.subject]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [q.questions.length, \" questions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Statut\\xA0: \", q.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }, this), q.status === 'draft' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentQuestionnaire(q),\n          children: \"Modifier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => submitQuestionnaire(q),\n          children: \"Soumettre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, q.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }, this)), currentQuestionnaire && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionnaire-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isCreatingNew ? 'Nouveau Questionnaire' : 'Modifier le Questionnaire'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: currentQuestionnaire.title,\n        placeholder: \"Titre\",\n        onChange: e => setCurrentQuestionnaire({\n          ...currentQuestionnaire,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: currentQuestionnaire.subject,\n        placeholder: \"Mati\\xE8re\",\n        onChange: e => setCurrentQuestionnaire({\n          ...currentQuestionnaire,\n          subject: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addQuestion,\n        children: \"Ajouter une question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), currentQuestionnaire.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: question.question,\n          onChange: e => updateQuestion(question.id, 'question', e.target.value),\n          placeholder: `Question ${index + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }, this), question.options.map((opt, optIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `correct-${question.id}`,\n            checked: question.correctAnswer === optIndex,\n            onChange: () => updateQuestion(question.id, 'correctAnswer', optIndex)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: opt,\n            placeholder: `Option ${optIndex + 1}`,\n            onChange: e => updateQuestionOption(question.id, optIndex, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 19\n          }, this)]\n        }, optIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeQuestion(question.id),\n          children: \"Supprimer Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveQuestionnaire,\n        children: \"Sauvegarder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCurrentQuestionnaire(null);\n          setIsCreatingNew(false);\n        },\n        children: \"Annuler\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n_s(TeacherDashboard, \"mlG8v/RkpJjCMnKZ6m4cYd/4dTA=\", false, function () {\n  return [useParams, useUser];\n});\n_c = TeacherDashboard;\nexport default TeacherDashboard;\nvar _c;\n$RefreshReg$(_c, \"TeacherDashboard\");","map":{"version":3,"names":["React","useState","useParams","useUser","QuestionnaireList","jsxDEV","_jsxDEV","Fragment","_Fragment","TeacherDashboard","user","onLogout","_s","faculty","setUser","id","children","fileName","_jsxFileName","lineNumber","columnNumber","questionnaires","setQuestionnaires","currentQuestionnaire","setCurrentQuestionnaire","isCreatingNew","setIsCreatingNew","searchTerm","setSearchTerm","showToast","title","description","alert","createNewQuestionnaire","newQuestionnaire","Date","now","toString","subject","questions","status","teacherId","duration","addQuestion","newQuestion","question","options","correctAnswer","updateQuestion","questionId","field","value","map","q","updateQuestionOption","optionIndex","opt","idx","removeQuestion","window","confirm","filter","saveQuestionnaire","trim","length","incomplete","some","prev","submitQuestionnaire","questionnaire","payload","teacherName","name","question_text","correct_answer","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","submittedAt","toISOString","error","console","className","onClick","type","placeholder","onChange","e","target","toLowerCase","includes","index","optIndex","checked","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/upl.patforme/frontend/src/pages/TeacherDashboard.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useUser } from '../contexts/UserContext';\r\nimport QuestionnaireList from '../components/QuestionnaireList';\r\n\r\n// Interfaces\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  role: string;\r\n  faculty: string;\r\n}\r\n\r\ninterface Question {\r\n  id: string;\r\n  question: string;\r\n  options: string[];\r\n  correctAnswer: number;\r\n}\r\n\r\ninterface Questionnaire {\r\n  id: string;\r\n  title: string;\r\n  subject: string;\r\n  questions: Question[];\r\n  status: 'draft' | 'submitted' | 'approved' | 'rejected';\r\n  submittedAt?: string;\r\n  teacherId: string;\r\n  duration: number;\r\n  faculty: string;\r\n}\r\n\r\ninterface TeacherDashboardProps {\r\n  user: User;\r\n  onLogout: () => void;\r\n}\r\n\r\nconst TeacherDashboard: React.FC<TeacherDashboardProps> = ({ user, onLogout }) => {\r\n  const { faculty } = useParams<{ faculty: string }>();\r\n  const { setUser } = useUser();\r\n\r\n  if (!user || !user.id) {\r\n    return <div>Utilisateur non connecté ou invalide.</div>;\r\n  }\r\n\r\n  const [questionnaires, setQuestionnaires] = useState<Questionnaire[]>([]);\r\n  const [currentQuestionnaire, setCurrentQuestionnaire] = useState<Questionnaire | null>(null);\r\n  const [isCreatingNew, setIsCreatingNew] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const showToast = (title: string, description: string) => {\r\n    alert(`${title}: ${description}`);\r\n  };\r\n\r\n  const createNewQuestionnaire = () => {\r\n    const newQuestionnaire: Questionnaire = {\r\n      id: Date.now().toString(),\r\n      title: '',\r\n      subject: '',\r\n      questions: [],\r\n      status: 'draft',\r\n      teacherId: user.id,\r\n      duration: 60,\r\n      faculty: user.faculty\r\n    };\r\n    setCurrentQuestionnaire(newQuestionnaire);\r\n    setIsCreatingNew(true);\r\n  };\r\n\r\n  const addQuestion = () => {\r\n    if (!currentQuestionnaire) return;\r\n    const newQuestion: Question = {\r\n      id: Date.now().toString(),\r\n      question: '',\r\n      options: ['', '', '', ''],\r\n      correctAnswer: 0\r\n    };\r\n    setCurrentQuestionnaire({\r\n      ...currentQuestionnaire,\r\n      questions: [...currentQuestionnaire.questions, newQuestion]\r\n    });\r\n  };\r\n\r\n  const updateQuestion = (questionId: string, field: keyof Question, value: any) => {\r\n    if (!currentQuestionnaire) return;\r\n    setCurrentQuestionnaire({\r\n      ...currentQuestionnaire,\r\n      questions: currentQuestionnaire.questions.map(q =>\r\n        q.id === questionId ? { ...q, [field]: value } : q\r\n      )\r\n    });\r\n  };\r\n\r\n  const updateQuestionOption = (questionId: string, optionIndex: number, value: string) => {\r\n    if (!currentQuestionnaire) return;\r\n    setCurrentQuestionnaire({\r\n      ...currentQuestionnaire,\r\n      questions: currentQuestionnaire.questions.map(q =>\r\n        q.id === questionId\r\n          ? { ...q, options: q.options.map((opt, idx) => (idx === optionIndex ? value : opt)) }\r\n          : q\r\n      )\r\n    });\r\n  };\r\n\r\n  const removeQuestion = (questionId: string) => {\r\n    if (!currentQuestionnaire) return;\r\n    if (window.confirm('Êtes-vous sûr de vouloir supprimer cette question ?')) {\r\n      setCurrentQuestionnaire({\r\n        ...currentQuestionnaire,\r\n        questions: currentQuestionnaire.questions.filter(q => q.id !== questionId)\r\n      });\r\n    }\r\n  };\r\n\r\n  const saveQuestionnaire = () => {\r\n    if (!currentQuestionnaire) return;\r\n    if (!currentQuestionnaire.title.trim() || !currentQuestionnaire.subject.trim()) {\r\n      return showToast('Erreur', 'Veuillez remplir le titre et la matière');\r\n    }\r\n    if (currentQuestionnaire.questions.length === 0) {\r\n      return showToast('Erreur', 'Veuillez ajouter au moins une question');\r\n    }\r\n    const incomplete = currentQuestionnaire.questions.some(q =>\r\n      !q.question.trim() || q.options.some(opt => !opt.trim())\r\n    );\r\n    if (incomplete) {\r\n      return showToast('Erreur', 'Veuillez compléter toutes les questions et options');\r\n    }\r\n    if (isCreatingNew) {\r\n      setQuestionnaires(prev => [...prev, currentQuestionnaire]);\r\n    } else {\r\n      setQuestionnaires(prev =>\r\n        prev.map(q => (q.id === currentQuestionnaire.id ? currentQuestionnaire : q))\r\n      );\r\n    }\r\n    showToast('Succès', 'Questionnaire sauvegardé');\r\n    setCurrentQuestionnaire(null);\r\n    setIsCreatingNew(false);\r\n  };\r\n\r\n  const submitQuestionnaire = async (questionnaire: Questionnaire) => {\r\n    if (!questionnaire.title.trim() || !questionnaire.subject.trim() || !questionnaire.teacherId) {\r\n      return showToast('Erreur', 'Champs requis manquants.');\r\n    }\r\n    if (questionnaire.questions.length === 0) {\r\n      return showToast('Erreur', 'Veuillez ajouter au moins une question.');\r\n    }\r\n\r\n    try {\r\n      const payload = {\r\n        title: questionnaire.title,\r\n        subject: questionnaire.subject,\r\n        duration: questionnaire.duration,\r\n        faculty: questionnaire.faculty,\r\n        teacherId: questionnaire.teacherId,\r\n        teacherName: user.name,\r\n        questions: questionnaire.questions.map(q => ({\r\n          question_text: q.question,\r\n          options: q.options,\r\n          correct_answer: q.correctAnswer\r\n        }))\r\n      };\r\n\r\n      const response = await fetch('http://localhost:3001/api/questionnaires/submit', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        return showToast('Erreur', errorText);\r\n      }\r\n\r\n      setQuestionnaires(prev =>\r\n        prev.map(q =>\r\n          q.id === questionnaire.id\r\n            ? { ...questionnaire, status: 'submitted', submittedAt: new Date().toISOString() }\r\n            : q\r\n        )\r\n      );\r\n\r\n      showToast('Succès', 'Questionnaire soumis avec succès !');\r\n      setCurrentQuestionnaire(null);\r\n    } catch (error) {\r\n      console.error('Erreur dans submitQuestionnaire :', error);\r\n      showToast('Erreur', 'Échec de la soumission du questionnaire.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <header className=\"header\">\r\n        <h1>Bienvenue {user.name} 👋</h1>\r\n        <p>Faculté : {user.faculty}</p>\r\n        <button onClick={onLogout}>Déconnexion</button>\r\n      </header>\r\n\r\n      <QuestionnaireList faculty={user.faculty} />\r\n\r\n      <div className=\"create-section\">\r\n        <button onClick={createNewQuestionnaire}>Créer un nouveau questionnaire</button>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Rechercher un questionnaire...\"\r\n          value={searchTerm}\r\n          onChange={e => setSearchTerm(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <h2>Mes Questionnaires</h2>\r\n      {questionnaires\r\n        .filter(q => q.title.toLowerCase().includes(searchTerm.toLowerCase()))\r\n        .map(q => (\r\n          <div key={q.id} className=\"questionnaire-item\">\r\n            <h3>{q.title}</h3>\r\n            <p>Matière : {q.subject}</p>\r\n            <p>{q.questions.length} questions</p>\r\n            <p>Statut : {q.status}</p>\r\n            {q.status === 'draft' && (\r\n              <>\r\n                <button onClick={() => setCurrentQuestionnaire(q)}>Modifier</button>\r\n                <button onClick={() => submitQuestionnaire(q)}>Soumettre</button>\r\n              </>\r\n            )}\r\n          </div>\r\n        ))}\r\n\r\n      {currentQuestionnaire && (\r\n        <div className=\"questionnaire-editor\">\r\n          <h2>{isCreatingNew ? 'Nouveau Questionnaire' : 'Modifier le Questionnaire'}</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={currentQuestionnaire.title}\r\n            placeholder=\"Titre\"\r\n            onChange={e => setCurrentQuestionnaire({ ...currentQuestionnaire, title: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={currentQuestionnaire.subject}\r\n            placeholder=\"Matière\"\r\n            onChange={e => setCurrentQuestionnaire({ ...currentQuestionnaire, subject: e.target.value })}\r\n          />\r\n          <button onClick={addQuestion}>Ajouter une question</button>\r\n\r\n          {currentQuestionnaire.questions.map((question, index) => (\r\n            <div key={question.id}>\r\n              <textarea\r\n                value={question.question}\r\n                onChange={e => updateQuestion(question.id, 'question', e.target.value)}\r\n                placeholder={`Question ${index + 1}`}\r\n              />\r\n              {question.options.map((opt, optIndex) => (\r\n                <div key={optIndex}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name={`correct-${question.id}`}\r\n                    checked={question.correctAnswer === optIndex}\r\n                    onChange={() => updateQuestion(question.id, 'correctAnswer', optIndex)}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    value={opt}\r\n                    placeholder={`Option ${optIndex + 1}`}\r\n                    onChange={e => updateQuestionOption(question.id, optIndex, e.target.value)}\r\n                  />\r\n                </div>\r\n              ))}\r\n              <button onClick={() => removeQuestion(question.id)}>Supprimer Question</button>\r\n            </div>\r\n          ))}\r\n\r\n          <button onClick={saveQuestionnaire}>Sauvegarder</button>\r\n          <button onClick={() => { setCurrentQuestionnaire(null); setIsCreatingNew(false); }}>Annuler</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeacherDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}