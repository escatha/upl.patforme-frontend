{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\upl.patforme\\\\frontend\\\\src\\\\pages\\\\ExamPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\n\n// Types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamPage = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [exam, setExam] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchExam = async () => {\n      try {\n        const res = await fetch('http://localhost:3001/api/exams/${id}');\n        const data = await res.json();\n        const now = new Date();\n        const start = new Date(data.startTime);\n        const end = new Date(data.endTime);\n        if (now >= start && now <= end) {\n          data.status = \"active\";\n        } else if (now < start) {\n          data.status = \"upcoming\";\n        } else {\n          data.status = \"completed\";\n        }\n        setExam(data);\n      } catch (error) {\n        console.error(\"Erreur de chargement de l'examen :\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (id) {\n      fetchExam();\n    }\n  }, [id]);\n  const handleAnswerChange = (questionId, optionIndex) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: optionIndex\n    }));\n  };\n  const handleSubmit = async () => {\n    if (!exam) return;\n    let correct = 0;\n    exam.questions.forEach(q => {\n      if (answers[q.id] === q.correctAnswer) {\n        correct++;\n      }\n    });\n    const totalQuestions = exam.questions.length;\n    const score = Math.round(correct / totalQuestions * 100);\n    const payload = {\n      examId: exam.id,\n      studentId: \"student-123\",\n      // à remplacer par l'ID réel de l'utilisateur connecté\n      studentName: \"Nom Étudiant\",\n      // tu peux le passer via props ou contexte\n      score: score,\n      totalQuestions: totalQuestions,\n      correctAnswers: correct,\n      submittedAt: new Date().toISOString()\n    };\n    try {\n      const res = await fetch(\"http://localhost:3001/api/results\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      if (res.ok) {\n        alert(\"Examen soumis avec succès ! Vous avez obtenu ${score}%\");\n        navigate(\"/student\");\n      } else {\n        alert(\"Erreur lors de la soumission des résultats.\");\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de l'envoi :\", error);\n      alert(\"Erreur réseau !\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold\",\n        children: exam.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onLogout,\n        className: \"text-red-600 underline text-sm\",\n        children: [\"D\\xE9connexion (\", user.name, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Mati\\xE8re : \", exam.subject]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Dur\\xE9e : \", exam.duration, \" minutes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"my-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: exam.questions.map((q, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold\",\n          children: [i + 1, \". \", q.question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), q.options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-4\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: q.id,\n              checked: answers[q.id] === idx,\n              onChange: () => handleAnswerChange(q.id, idx)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this), \" \", opt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this))]\n      }, q.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n      onClick: handleSubmit,\n      children: \"Soumettre l'examen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamPage, \"n6R5wo2UPnIdOSSI5JdK8DX7Ees=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ExamPage;\nexport default ExamPage;\nvar _c;\n$RefreshReg$(_c, \"ExamPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","ExamPage","user","onLogout","_s","id","exam","setExam","answers","setAnswers","loading","setLoading","navigate","fetchExam","res","fetch","data","json","now","Date","start","startTime","end","endTime","status","error","console","handleAnswerChange","questionId","optionIndex","prev","handleSubmit","correct","questions","forEach","q","correctAnswer","totalQuestions","length","score","Math","round","payload","examId","studentId","studentName","correctAnswers","submittedAt","toISOString","method","headers","body","JSON","stringify","ok","alert","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","subject","duration","map","i","question","options","opt","idx","type","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/upl.patforme/frontend/src/pages/ExamPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\n// Types\r\ninterface Question {\r\n  id: string;\r\n  question: string;\r\n  options: string[];\r\n  correctAnswer: number;\r\n}\r\n\r\ninterface Exam {\r\n  id: string;\r\n  title: string;\r\n  subject: string;\r\n  duration: number;\r\n  questions: Question[];\r\n  startTime: string;\r\n  endTime: string;\r\n  status?: 'upcoming' | 'active' | 'completed';\r\n}\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  role: string;\r\n  faculty: string;\r\n}\r\n\r\ninterface ExamPageProps {\r\n  user: User;\r\n  onLogout: () => void;\r\n}\r\n\r\nconst ExamPage: React.FC<ExamPageProps> = ({ user, onLogout }) => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const [exam, setExam] = useState<Exam | null>(null);\r\n  const [answers, setAnswers] = useState<{ [questionId: string]: number }>({});\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchExam = async () => {\r\n      try {\r\n        const res = await fetch('http://localhost:3001/api/exams/${id}');\r\n        const data: Exam = await res.json();\r\n\r\n        const now = new Date();\r\n        const start = new Date(data.startTime);\r\n        const end = new Date(data.endTime);\r\n\r\n        if (now >= start && now <= end) {\r\n          data.status = \"active\";\r\n        } else if (now < start) {\r\n          data.status = \"upcoming\";\r\n        } else {\r\n          data.status = \"completed\";\r\n        }\r\n\r\n        setExam(data);\r\n      } catch (error) {\r\n        console.error(\"Erreur de chargement de l'examen :\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchExam();\r\n    }\r\n  }, [id]);\r\n\r\n  const handleAnswerChange = (questionId: string, optionIndex: number) => {\r\n    setAnswers((prev) => ({ ...prev, [questionId]: optionIndex }));\r\n  };\r\n\r\nconst handleSubmit = async () => {\r\n  if (!exam) return;\r\n\r\n  let correct = 0;\r\n\r\n  exam.questions.forEach((q) => {\r\n    if (answers[q.id] === q.correctAnswer) {\r\n      correct++;\r\n    }\r\n  });\r\n\r\n  const totalQuestions = exam.questions.length;\r\n  const score = Math.round((correct / totalQuestions) * 100);\r\n\r\n  const payload = {\r\n    examId: exam.id,\r\n    studentId: \"student-123\", // à remplacer par l'ID réel de l'utilisateur connecté\r\n    studentName: \"Nom Étudiant\", // tu peux le passer via props ou contexte\r\n    score: score,\r\n    totalQuestions: totalQuestions,\r\n    correctAnswers: correct,\r\n    submittedAt: new Date().toISOString(),\r\n  };\r\n\r\n  try {\r\n    const res = await fetch(\"http://localhost:3001/api/results\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(payload),\r\n    });\r\n\r\n    if (res.ok) {\r\n      alert(\"Examen soumis avec succès ! Vous avez obtenu ${score}%\");\r\n      navigate(\"/student\");\r\n    } else {\r\n      alert(\"Erreur lors de la soumission des résultats.\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Erreur lors de l'envoi :\", error);\r\n    alert(\"Erreur réseau !\");\r\n  }\r\n};\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h1 className=\"text-2xl font-bold\">{exam.title}</h1>\r\n        <button\r\n          onClick={onLogout}\r\n          className=\"text-red-600 underline text-sm\"\r\n        >\r\n          Déconnexion ({user.name})\r\n        </button>\r\n      </div>\r\n\r\n      <p>Matière : {exam.subject}</p>\r\n      <p>Durée : {exam.duration} minutes</p>\r\n      <hr className=\"my-4\" />\r\n\r\n      <div>\r\n        {exam.questions.map((q, i) => (\r\n          <div key={q.id} className=\"mb-6\">\r\n            <p className=\"font-semibold\">\r\n              {i + 1}. {q.question}\r\n            </p>\r\n            {q.options.map((opt, idx) => (\r\n              <div key={idx} className=\"ml-4\">\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name={q.id}\r\n                    checked={answers[q.id] === idx}\r\n                    onChange={() => handleAnswerChange(q.id, idx)}\r\n                  />{\" \"}\r\n                  {opt}\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button\r\n        className=\"bg-blue-600 text-white px-4 py-2 rounded\"\r\n        onClick={handleSubmit}\r\n      >\r\n        Soumettre l'examen\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}