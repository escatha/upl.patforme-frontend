{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{useParams}from\"react-router-dom\";import{Card,CardContent,CardDescription,CardHeader,CardTitle}from\"../components/ui/card\";import{Button}from\"../components/ui/button\";import{Badge}from\"../components/ui/badge\";import{Progress}from\"../components/ui/progress\";import{LogOut,Clock,BookOpen}from\"lucide-react\";import{useToast}from\"../hooks/use-toast\";import{useExam}from'../contexts/ExamContext';import\"./StudentDashboard.css\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const StudentDashboard=_ref=>{let{user,onLogout}=_ref;const{faculty}=useParams();const{toast}=useToast();// Utilisation du contexte Exam\nconst{exams,setExams,activeExam,setActiveExam,examStarted,setExamStarted}=useExam();const[results,setResults]=useState([]);const[currentQuestion,setCurrentQuestion]=useState(0);const[answers,setAnswers]=useState({});const[timeLeft,setTimeLeft]=useState(0);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const timerRef=useRef(null);useEffect(()=>{if(!user||!user.faculty){setError(\"Utilisateur ou faculté non renseigné.\");return;}const fetchData=async()=>{console.log(\"📩 Requête reçue pour faculty :\",user.faculty);try{setLoading(true);setError(null);const examsResponse=await fetch(`http://localhost:3001/api/exams?faculty=${user.faculty}`,{headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`}});if(!examsResponse.ok)throw new Error('Failed to fetch exams');const examsData=await examsResponse.json();console.log(\"donner recue du backend\");console.error(\"Erreur lors du chargement des examens:\",error);const resultsResponse=await fetch('http://localhost:3001/api/results',{headers:{'Authorization':`Bearer ${localStorage.getItem('token')}`}});if(!resultsResponse.ok)throw new Error('Failed to fetch results');const resultsData=await resultsResponse.json();const now=new Date();const filteredExams=examsData.filter(exam=>exam.faculty===user.faculty).map(exam=>{const start=new Date(exam.startTime);const end=new Date(exam.endTime);let status='upcoming';if(now>end)status='completed';else if(now>=start)status='active';return{...exam,status};});setExams(filteredExams);setResults(resultsData);}catch(err){setError(\"Erreur lors du chargement des données\");toast({title:\"Erreur\",description:\"Impossible de charger les examens\",variant:\"destructive\"});}finally{setLoading(false);}};fetchData();},[user,user===null||user===void 0?void 0:user.faculty]);useEffect(()=>{if(!activeExam||!examStarted||timeLeft<=0)return;timerRef.current=setInterval(()=>{setTimeLeft(prev=>{if(prev<=1){handleSubmitExam();return 0;}return prev-1;});},1000);return()=>{if(timerRef.current){clearInterval(timerRef.current);}};},[activeExam,examStarted,timeLeft]);const startExam=exam=>{console.log(\" startExam appeler avec :\",exam);if(!exam)return;const now=new Date();const startTime=new Date(exam.startTime);const endTime=new Date(exam.endTime);if(now<startTime){console.log(\"examen pas encors commencer \");toast({title:\"Examen non disponible\",description:`L'examen commence le ${startTime.toLocaleString()}`,variant:\"destructive\"});return;}if(now>endTime){console.log(\"examen deja terminer\");toast({title:\"Examen terminé\",description:\"Le temps imparti est écoulé\",variant:\"destructive\"});return;}if(!exam.questions||!Array.isArray(exam.questions)||exam.questions.length===0){console.log(\"pas des question \");toast({title:\"Examen invalide\",description:\"Aucune question trouvée pour cet examen.\",variant:\"destructive\"});return;}setActiveExam(exam);setTimeLeft(Math.floor((endTime.getTime()-now.getTime())/1000));setCurrentQuestion(0);setAnswers({});setExamStarted(true);setTimeout(()=>{console.log(\"verifiecation apres 500ms\");console.log(\"activeExam=\",exam);console.log(\"examStarted =\",true);},500);};const selectAnswer=(questionId,answerIndex)=>{if(!examStarted)return;setAnswers(prev=>({...prev,[questionId]:answerIndex}));};const navigateQuestion=direction=>{if(!activeExam)return;if(direction==='prev'&&currentQuestion>0){setCurrentQuestion(prev=>prev-1);}else if(direction==='next'&&currentQuestion<activeExam.questions.length-1){setCurrentQuestion(prev=>prev+1);}};const handleSubmitExam=async()=>{if(!activeExam||!Array.isArray(activeExam.questions))return;const score=activeExam.questions.reduce((acc,question)=>{return acc+(answers[question.id]===question.correctAnswer?1:0);},0);const percentage=Math.round(score/activeExam.questions.length*100);const newResult={examId:activeExam.id,score:percentage,studentName:(user===null||user===void 0?void 0:user.name)||\"\",totalQuestions:activeExam.questions.length,submittedAt:new Date().toISOString(),completedAt:new Date().toISOString(),studentId:user===null||user===void 0?void 0:user.id,answers:answers,faculty:user===null||user===void 0?void 0:user.faculty};console.log(\"🔍 Données envoyées au backend :\",newResult);try{const response=await fetch('http://localhost:3001/api/exams/submit-exam',{method:'POST',headers:{'Content-Type':'application/json','Authorization':`Bearer ${localStorage.getItem('token')}`},body:JSON.stringify(newResult)});if(!response.ok){const errorData=await response.json();console.error('Erreur backend:',errorData);throw new Error(errorData.message||'Failed to submit exam');}setResults(prev=>[...prev,newResult]);toast({title:\"Examen terminé\",description:`Votre score: ${percentage}%`});}catch(err){toast({title:\"Erreur\",description:\"Échec de l'enregistrement des résultats\",variant:\"destructive\"});}finally{setActiveExam(null);setExamStarted(false);}};const formatTime=seconds=>{const mins=Math.floor(seconds/60);const secs=seconds%60;return`${mins.toString().padStart(2,'0')}:${secs.toString().padStart(2,'0')}`;};if(error)return/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error});return/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-container\",children:examStarted&&activeExam?/*#__PURE__*/_jsxs(\"div\",{className:\"exam-container\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"exam-header\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:activeExam.title}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Question \",currentQuestion+1,\"/\",activeExam.questions.length]})]}),/*#__PURE__*/_jsxs(\"div\",{className:`timer ${timeLeft<300?'warning':''}`,children:[/*#__PURE__*/_jsx(Clock,{size:18}),/*#__PURE__*/_jsx(\"span\",{children:formatTime(timeLeft)})]})]}),/*#__PURE__*/_jsx(Progress,{value:(currentQuestion+1)/activeExam.questions.length*100,className:\"progress-bar\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"question-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:activeExam.questions[currentQuestion].question}),/*#__PURE__*/_jsx(\"div\",{className:\"options-grid\",children:activeExam.questions[currentQuestion].options.map((option,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`option ${answers[activeExam.questions[currentQuestion].id]===index?'selected':''}`,onClick:()=>selectAnswer(activeExam.questions[currentQuestion].id,index),children:[/*#__PURE__*/_jsx(\"div\",{className:\"option-indicator\",children:answers[activeExam.questions[currentQuestion].id]===index&&/*#__PURE__*/_jsx(\"div\",{className:\"indicator-dot\"})}),/*#__PURE__*/_jsx(\"span\",{children:option})]},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"navigation-buttons\",children:[/*#__PURE__*/_jsx(Button,{onClick:()=>navigateQuestion('prev'),disabled:currentQuestion===0,variant:\"outline\",children:\"Pr\\xE9c\\xE9dent\"}),currentQuestion===activeExam.questions.length-1?/*#__PURE__*/_jsx(Button,{onClick:handleSubmitExam,className:\"submit-btn\",children:\"Terminer\"}):/*#__PURE__*/_jsx(Button,{onClick:()=>navigateQuestion('next'),children:\"Suivant\"})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"header\",{className:\"dashboard-header\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"img\",{src:\"https://i.postimg.cc/mZwbqh7Z/1752262954454.jpg\",alt:\"logo UPL\",width:\"60\",height:\"60\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Tableau de Bord \\xC9tudiant\"}),/*#__PURE__*/_jsxs(\"h2\",{children:[\"Bienvenue \",user?user.name:\"Étudiant\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Facult\\xE9 : \",user===null||user===void 0?void 0:user.faculty]})]}),/*#__PURE__*/_jsxs(Button,{onClick:onLogout,variant:\"outline\",children:[/*#__PURE__*/_jsx(LogOut,{size:16,className:\"mr-2\"}),\"D\\xE9connexion\"]})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"exams-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Examens Disponibles\"}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Chargement des examens...\"}):exams.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"Aucun examen disponible\"}):/*#__PURE__*/_jsx(\"div\",{className:\"exams-grid\",children:exams.map(exam=>/*#__PURE__*/_jsxs(Card,{className:\"exam-card\",children:[/*#__PURE__*/_jsxs(CardHeader,{children:[/*#__PURE__*/_jsxs(CardTitle,{children:[/*#__PURE__*/_jsx(BookOpen,{size:16,className:\"mr-2\"}),exam.title]}),/*#__PURE__*/_jsx(CardDescription,{children:exam.subject}),/*#__PURE__*/_jsx(Badge,{className:`status-${exam.status}`,children:exam.status==='active'?'Actif':exam.status==='upcoming'?'À venir':'Terminé'})]}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Dur\\xE9e:\"}),\" \",exam.duration,\" min\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"D\\xE9but:\"}),\" \",new Date(exam.startTime).toLocaleString()]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Fin:\"}),\" \",new Date(exam.endTime).toLocaleString()]}),exam.status==='active'&&/*#__PURE__*/_jsx(Button,{onClick:()=>startExam(exam),className:\"start-exam-btn\",children:\"Commencer\"})]})]},exam.id))})]}),/*#__PURE__*/_jsxs(\"section\",{className:\"results-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Mes R\\xE9sultats\"}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Chargement des r\\xE9sultats...\"}):results.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"Aucun r\\xE9sultat disponible\"}):/*#__PURE__*/_jsx(\"div\",{className:\"results-list\",children:results.map((result,index)=>{const exam=exams.find(e=>e.id===result.examId);return/*#__PURE__*/_jsx(Card,{className:\"result-card\",children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"result-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:(exam===null||exam===void 0?void 0:exam.title)||`Examen #${result.examId}`}),/*#__PURE__*/_jsxs(\"div\",{className:`score ${result.score>=60?'pass':'fail'}`,children:[result.score,\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"result-details\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[Math.round(result.score*result.totalQuestions/100),\"/\",result.totalQuestions,\" bonnes r\\xE9ponses\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"date\",children:result.submittedAt?new Date(result.submittedAt).toLocaleString('fr-FR',{dateStyle:'short',timeStyle:'short'}):\"Date non disponible\"})]})]})},index);})})]})]})});};export default StudentDashboard;","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","Card","CardContent","CardDescription","CardHeader","CardTitle","Button","Badge","Progress","LogOut","Clock","BookOpen","useToast","useExam","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","StudentDashboard","_ref","user","onLogout","faculty","toast","exams","setExams","activeExam","setActiveExam","examStarted","setExamStarted","results","setResults","currentQuestion","setCurrentQuestion","answers","setAnswers","timeLeft","setTimeLeft","loading","setLoading","error","setError","timerRef","fetchData","console","log","examsResponse","fetch","headers","localStorage","getItem","ok","Error","examsData","json","resultsResponse","resultsData","now","Date","filteredExams","filter","exam","map","start","startTime","end","endTime","status","err","title","description","variant","current","setInterval","prev","handleSubmitExam","clearInterval","startExam","toLocaleString","questions","Array","isArray","length","Math","floor","getTime","setTimeout","selectAnswer","questionId","answerIndex","navigateQuestion","direction","score","reduce","acc","question","id","correctAnswer","percentage","round","newResult","examId","studentName","name","totalQuestions","submittedAt","toISOString","completedAt","studentId","response","method","body","JSON","stringify","errorData","message","formatTime","seconds","mins","secs","toString","padStart","className","children","size","value","options","option","index","onClick","disabled","src","alt","width","height","subject","duration","result","find","e","dateStyle","timeStyle"],"sources":["C:/Users/HP/Desktop/upl.patforme/frontend/src/pages/StudentDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"../components/ui/card\";\r\nimport { Button } from \"../components/ui/button\";\r\nimport { Badge } from \"../components/ui/badge\";\r\nimport { Progress } from \"../components/ui/progress\";\r\nimport { LogOut, Clock, CheckCircle, BookOpen } from \"lucide-react\";\r\nimport { useToast } from \"../hooks/use-toast\";\r\nimport { useExam } from '../contexts/ExamContext';\r\nimport \"./StudentDashboard.css\"\r\ninterface Exam {\r\n  id: string;\r\n  title: string;\r\n  subject: string;\r\n  duration: number;\r\n  startTime: string;\r\n  endTime: string;\r\n  questions: Question[];\r\n  status: 'upcoming' | 'active' | 'completed';\r\n}\r\n\r\ninterface Question {\r\n  id: string;\r\n  question: string;\r\n  options: string[];\r\n  correctAnswer: number;\r\n}\r\n\r\ninterface User {\r\n  id: string;\r\n  username: string;\r\n  role: string;\r\n  name: string;\r\n  faculty: string;\r\n}\r\n\r\ninterface ExamResult {\r\n  examId: string;\r\n  score: number;\r\n  totalQuestions: number;\r\n  completedAt?: string;\r\n    submittedAt: string;\r\n    \r\n}\r\n\r\ninterface StudentDashboardProps {\r\n  user: User | null;\r\n  onLogout: () => void;\r\n}\r\n\r\nconst StudentDashboard: React.FC<StudentDashboardProps> = ({ user, onLogout }) => {\r\n  const { faculty } = useParams();\r\n  const { toast } = useToast();\r\n\r\n  // Utilisation du contexte Exam\r\n  const {\r\n    exams,\r\n    setExams,\r\n    activeExam,\r\n    setActiveExam,\r\n    examStarted,\r\n    setExamStarted\r\n  } = useExam();\r\n\r\n  const [results, setResults] = useState<ExamResult[]>([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [answers, setAnswers] = useState<{ [key: string]: number }>({});\r\n  const [timeLeft, setTimeLeft] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n\r\n  useEffect(() => {\r\n    if (!user || !user.faculty) {\r\n  setError(\"Utilisateur ou faculté non renseigné.\");\r\n  return;\r\n}\r\n  \r\n  const fetchData = async () => {\r\n      console.log(\"📩 Requête reçue pour faculty :\", user.faculty );\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        const examsResponse = await fetch(`http://localhost:3001/api/exams?faculty=${user.faculty}`, {\r\n          \r\n\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n        if (!examsResponse.ok) throw new Error('Failed to fetch exams');\r\n        const examsData = await examsResponse.json();\r\n        console.log (\"donner recue du backend\")\r\n        console.error(\"Erreur lors du chargement des examens:\", error);\r\n\r\n        const resultsResponse = await fetch('http://localhost:3001/api/results', {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n        if (!resultsResponse.ok) throw new Error('Failed to fetch results');\r\n        const resultsData = await resultsResponse.json();\r\n\r\n        const now = new Date();\r\n        const filteredExams = examsData\r\n          .filter((exam: any) => exam.faculty === user.faculty)\r\n          .map((exam: any) => {\r\n            const start = new Date(exam.startTime);\r\n            const end = new Date(exam.endTime);\r\n            let status: 'upcoming' | 'active' | 'completed' = 'upcoming';\r\n            if (now > end) status = 'completed';\r\n            else if (now >= start) status = 'active';\r\n            return { ...exam, status };\r\n          });\r\n\r\n        setExams(filteredExams);\r\n        setResults(resultsData);\r\n      } catch (err) {\r\n        setError(\"Erreur lors du chargement des données\");\r\n        toast({\r\n          title: \"Erreur\",\r\n          description: \"Impossible de charger les examens\",\r\n          variant: \"destructive\",\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [user, user?.faculty]);\r\n\r\n  useEffect(() => {\r\n    if (!activeExam || !examStarted || timeLeft <= 0) return;\r\n\r\n    timerRef.current = setInterval(() => {\r\n      setTimeLeft(prev => {\r\n        if (prev <= 1) {\r\n          handleSubmitExam();\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current);\r\n      }\r\n    };\r\n  }, [activeExam, examStarted, timeLeft]);\r\n\r\n  const startExam = (exam: typeof activeExam) => {\r\n    console.log (\" startExam appeler avec :\",exam)\r\n    if (!exam) return;\r\n\r\n    const now = new Date();\r\n    const startTime = new Date(exam.startTime);\r\n    const endTime = new Date(exam.endTime);\r\n\r\n    if (now < startTime) {\r\n      console.log (\"examen pas encors commencer \");\r\n      toast({\r\n        title: \"Examen non disponible\",\r\n        description: `L'examen commence le ${startTime.toLocaleString()}`,\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (now > endTime) {\r\n      console. log(\"examen deja terminer\");\r\n      toast({\r\n        title: \"Examen terminé\",\r\n        description: \"Le temps imparti est écoulé\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!exam.questions || !Array.isArray(exam.questions) || exam.questions.length === 0) {\r\n      console.log(\"pas des question \")\r\n      toast({\r\n        title: \"Examen invalide\",\r\n        description: \"Aucune question trouvée pour cet examen.\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setActiveExam(exam);\r\n    setTimeLeft(Math.floor((endTime.getTime() - now.getTime()) / 1000));\r\n    setCurrentQuestion(0);\r\n    setAnswers({});\r\n    setExamStarted(true);\r\n    setTimeout(()  => {\r\n      console.log (\"verifiecation apres 500ms\");\r\n      console.log(\"activeExam=\",exam);\r\n      console.log(\"examStarted =\",true);\r\n    },500)\r\n  };\r\n\r\n  const selectAnswer = (questionId: string, answerIndex: number) => {\r\n    if (!examStarted) return;\r\n    setAnswers(prev => ({ ...prev, [questionId]: answerIndex }));\r\n  };\r\n\r\n  const navigateQuestion = (direction: 'prev' | 'next') => {\r\n    if (!activeExam) return;\r\n    if (direction === 'prev' && currentQuestion > 0) {\r\n      setCurrentQuestion(prev => prev - 1);\r\n    } else if (direction === 'next' && currentQuestion < activeExam.questions.length - 1) {\r\n      setCurrentQuestion(prev => prev + 1);\r\n    }\r\n  };\r\n\r\n  const handleSubmitExam = async () => {\r\n    if (!activeExam || !Array.isArray(activeExam.questions)) return;\r\n\r\n    const score = activeExam.questions.reduce((acc, question) => {\r\n      return acc + (answers[question.id] === question.correctAnswer ? 1 : 0);\r\n    }, 0);\r\n\r\n    const percentage = Math.round((score / activeExam.questions.length) * 100);\r\n    const newResult = {\r\n    examId: activeExam.id,\r\n    score: percentage,\r\n    studentName: user?.name || \"\",\r\n    totalQuestions: activeExam.questions.length,\r\n    submittedAt: new Date().toISOString(),\r\n    completedAt: new Date().toISOString(),\r\n    studentId: user?.id,\r\n    answers: answers,\r\n    faculty: user?.faculty,\r\n  };\r\n    console.log(\"🔍 Données envoyées au backend :\", newResult);\r\n    \r\n    \r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/exams/submit-exam', {\r\n        \r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n       body: JSON.stringify(newResult)\r\n      });\r\n      if (!response.ok) {\r\n  const errorData = await response.json();\r\n  console.error('Erreur backend:', errorData);\r\n  throw new Error(errorData.message || 'Failed to submit exam');\r\n}\r\n\r\n\r\n      setResults(prev => [...prev, newResult]);\r\n      toast({\r\n        title: \"Examen terminé\",\r\n        description: `Votre score: ${percentage}%`,\r\n      });\r\n    } catch (err) {\r\n      toast({\r\n        title: \"Erreur\",\r\n        description: \"Échec de l'enregistrement des résultats\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setActiveExam(null);\r\n      setExamStarted(false);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds: number) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  if (error) return <div className=\"error-message\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      \r\n      {examStarted && activeExam ? (\r\n        <div className=\"exam-container\">\r\n          <header className=\"exam-header\">\r\n            <div>\r\n              <h1>{activeExam.title}</h1>\r\n              <p>Question {currentQuestion + 1}/{activeExam.questions.length}</p>\r\n            </div>\r\n            <div className={`timer ${timeLeft < 300 ? 'warning' : ''}`}>\r\n              <Clock size={18} />\r\n              <span>{formatTime(timeLeft)}</span>\r\n            </div>\r\n          </header>\r\n\r\n          <Progress value={((currentQuestion + 1) / activeExam.questions.length) * 100} className=\"progress-bar\" />\r\n\r\n          <div className=\"question-card\">\r\n            <h2>{activeExam.questions[currentQuestion].question}</h2>\r\n            <div className=\"options-grid\">\r\n              {activeExam.questions[currentQuestion].options.map((option, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`option ${answers[activeExam.questions[currentQuestion].id] === index ? 'selected' : ''}`}\r\n                  onClick={() => selectAnswer(activeExam.questions[currentQuestion].id, index)}\r\n                >\r\n                  <div className=\"option-indicator\">\r\n                    {answers[activeExam.questions[currentQuestion].id] === index && <div className=\"indicator-dot\" />}\r\n                  </div>\r\n                  <span>{option}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"navigation-buttons\">\r\n            <Button\r\n              onClick={() => navigateQuestion('prev')}\r\n              disabled={currentQuestion === 0}\r\n              variant=\"outline\"\r\n            >\r\n              Précédent\r\n            </Button>\r\n            {currentQuestion === activeExam.questions.length - 1 ? (\r\n              <Button onClick={handleSubmitExam} className=\"submit-btn\">\r\n                Terminer\r\n              </Button>\r\n            ) : (\r\n              <Button onClick={() => navigateQuestion('next')}>\r\n                Suivant\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <header className=\"dashboard-header\">\r\n            <div>\r\n                <img src=\"https://i.postimg.cc/mZwbqh7Z/1752262954454.jpg\"alt=\"logo UPL\" width=\"60\" height=\"60\" ></img>\r\n              <h1>Tableau de Bord Étudiant</h1>\r\n              <h2>Bienvenue {user ? user.name : \"Étudiant\"}</h2>\r\n              <p>Faculté : {user?.faculty}</p>\r\n            </div>\r\n            <Button onClick={onLogout} variant=\"outline\">\r\n              <LogOut size={16} className=\"mr-2\" />\r\n              Déconnexion\r\n            </Button>\r\n          </header>\r\n\r\n          <section className=\"exams-section\">\r\n            <h2>Examens Disponibles</h2>\r\n            {loading ? (\r\n              <p>Chargement des examens...</p>\r\n            ) : exams.length === 0 ? (\r\n              <p>Aucun examen disponible</p>\r\n            ) : (\r\n              <div className=\"exams-grid\">\r\n                {exams.map((exam) => (\r\n                  <Card key={exam.id} className=\"exam-card\">\r\n                    <CardHeader>\r\n                      <CardTitle>\r\n                        <BookOpen size={16} className=\"mr-2\" />\r\n                        {exam.title}\r\n                      </CardTitle>\r\n                      <CardDescription>{exam.subject}</CardDescription>\r\n                      <Badge className={`status-${exam.status}`}>\r\n                        {exam.status === 'active' ? 'Actif' :\r\n                         exam.status === 'upcoming' ? 'À venir' : 'Terminé'}\r\n                      </Badge>\r\n                    </CardHeader>\r\n                    \r\n                      <CardContent>\r\n                      <p><strong>Durée:</strong> {exam.duration} min</p>\r\n                      <p><strong>Début:</strong> {new Date(exam.startTime).toLocaleString()}</p>\r\n                      <p><strong>Fin:</strong> {new Date(exam.endTime).toLocaleString()}</p>\r\n                      {exam.status === 'active' && (\r\n                        <Button onClick={() => startExam(exam)} className=\"start-exam-btn\">\r\n                          Commencer\r\n                        </Button>\r\n                      )}\r\n                    </CardContent>\r\n                  </Card>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </section>\r\n\r\n          <section className=\"results-section\">\r\n            <h2>Mes Résultats</h2>\r\n            {loading ? (\r\n              <p>Chargement des résultats...</p>\r\n            ) : results.length === 0 ? (\r\n              <p>Aucun résultat disponible</p>\r\n            ) : (\r\n              <div className=\"results-list\">\r\n                {results.map((result, index) => {\r\n                  const exam = exams.find(e => e.id === result.examId);\r\n                  return (\r\n                    <Card key={index} className=\"result-card\">\r\n                      <CardContent>\r\n                        <div className=\"result-header\">\r\n                          <h3>{exam?.title || `Examen #${result.examId}`}</h3>\r\n                          <div className={`score ${result.score >= 60 ? 'pass' : 'fail'}`}>\r\n                            {result.score}%\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"result-details\">\r\n                          <p>{Math.round((result.score * result.totalQuestions) / 100)}/{result.totalQuestions} bonnes réponses</p>\r\n                         <p className=\"date\">\r\n         {result.submittedAt\r\n        ? new Date(result.submittedAt).toLocaleString('fr-FR', {\r\n        dateStyle: 'short',\r\n        timeStyle: 'short'\r\n      })\r\n    : \"Date non disponible\"}\r\n</p>\r\n\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </section>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentDashboard;\r\n\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC1D,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,OACEC,IAAI,CACJC,WAAW,CACXC,eAAe,CACfC,UAAU,CACVC,SAAS,KACJ,uBAAuB,CAC9B,OAASC,MAAM,KAAQ,yBAAyB,CAChD,OAASC,KAAK,KAAQ,wBAAwB,CAC9C,OAASC,QAAQ,KAAQ,2BAA2B,CACpD,OAASC,MAAM,CAAEC,KAAK,CAAeC,QAAQ,KAAQ,cAAc,CACnE,OAASC,QAAQ,KAAQ,oBAAoB,CAC7C,OAASC,OAAO,KAAQ,yBAAyB,CACjD,MAAO,wBAAwB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAyC/B,KAAM,CAAAC,gBAAiD,CAAGC,IAAA,EAAwB,IAAvB,CAAEC,IAAI,CAAEC,QAAS,CAAC,CAAAF,IAAA,CAC3E,KAAM,CAAEG,OAAQ,CAAC,CAAGxB,SAAS,CAAC,CAAC,CAC/B,KAAM,CAAEyB,KAAM,CAAC,CAAGb,QAAQ,CAAC,CAAC,CAE5B;AACA,KAAM,CACJc,KAAK,CACLC,QAAQ,CACRC,UAAU,CACVC,aAAa,CACbC,WAAW,CACXC,cACF,CAAC,CAAGlB,OAAO,CAAC,CAAC,CAEb,KAAM,CAACmB,OAAO,CAAEC,UAAU,CAAC,CAAGpC,QAAQ,CAAe,EAAE,CAAC,CACxD,KAAM,CAACqC,eAAe,CAAEC,kBAAkB,CAAC,CAAGtC,QAAQ,CAAC,CAAC,CAAC,CACzD,KAAM,CAACuC,OAAO,CAAEC,UAAU,CAAC,CAAGxC,QAAQ,CAA4B,CAAC,CAAC,CAAC,CACrE,KAAM,CAACyC,QAAQ,CAAEC,WAAW,CAAC,CAAG1C,QAAQ,CAAC,CAAC,CAAC,CAC3C,KAAM,CAAC2C,OAAO,CAAEC,UAAU,CAAC,CAAG5C,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAC6C,KAAK,CAAEC,QAAQ,CAAC,CAAG9C,QAAQ,CAAgB,IAAI,CAAC,CACvD,KAAM,CAAA+C,QAAQ,CAAG7C,MAAM,CAAwB,IAAI,CAAC,CAGpDD,SAAS,CAAC,IAAM,CACd,GAAI,CAACwB,IAAI,EAAI,CAACA,IAAI,CAACE,OAAO,CAAE,CAC9BmB,QAAQ,CAAC,uCAAuC,CAAC,CACjD,OACF,CAEE,KAAM,CAAAE,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC1BC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAEzB,IAAI,CAACE,OAAQ,CAAC,CAC7D,GAAI,CACFiB,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CAEd,KAAM,CAAAK,aAAa,CAAG,KAAM,CAAAC,KAAK,CAAC,2CAA2C3B,IAAI,CAACE,OAAO,EAAE,CAAE,CAG3F0B,OAAO,CAAE,CACP,eAAe,CAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAC1D,CACF,CAAC,CAAC,CACF,GAAI,CAACJ,aAAa,CAACK,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,uBAAuB,CAAC,CAC/D,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAP,aAAa,CAACQ,IAAI,CAAC,CAAC,CAC5CV,OAAO,CAACC,GAAG,CAAE,yBAAyB,CAAC,CACvCD,OAAO,CAACJ,KAAK,CAAC,wCAAwC,CAAEA,KAAK,CAAC,CAE9D,KAAM,CAAAe,eAAe,CAAG,KAAM,CAAAR,KAAK,CAAC,mCAAmC,CAAE,CACvEC,OAAO,CAAE,CACP,eAAe,CAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAC1D,CACF,CAAC,CAAC,CACF,GAAI,CAACK,eAAe,CAACJ,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,yBAAyB,CAAC,CACnE,KAAM,CAAAI,WAAW,CAAG,KAAM,CAAAD,eAAe,CAACD,IAAI,CAAC,CAAC,CAEhD,KAAM,CAAAG,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACtB,KAAM,CAAAC,aAAa,CAAGN,SAAS,CAC5BO,MAAM,CAAEC,IAAS,EAAKA,IAAI,CAACvC,OAAO,GAAKF,IAAI,CAACE,OAAO,CAAC,CACpDwC,GAAG,CAAED,IAAS,EAAK,CAClB,KAAM,CAAAE,KAAK,CAAG,GAAI,CAAAL,IAAI,CAACG,IAAI,CAACG,SAAS,CAAC,CACtC,KAAM,CAAAC,GAAG,CAAG,GAAI,CAAAP,IAAI,CAACG,IAAI,CAACK,OAAO,CAAC,CAClC,GAAI,CAAAC,MAA2C,CAAG,UAAU,CAC5D,GAAIV,GAAG,CAAGQ,GAAG,CAAEE,MAAM,CAAG,WAAW,CAAC,IAC/B,IAAIV,GAAG,EAAIM,KAAK,CAAEI,MAAM,CAAG,QAAQ,CACxC,MAAO,CAAE,GAAGN,IAAI,CAAEM,MAAO,CAAC,CAC5B,CAAC,CAAC,CAEJ1C,QAAQ,CAACkC,aAAa,CAAC,CACvB5B,UAAU,CAACyB,WAAW,CAAC,CACzB,CAAE,MAAOY,GAAG,CAAE,CACZ3B,QAAQ,CAAC,uCAAuC,CAAC,CACjDlB,KAAK,CAAC,CACJ8C,KAAK,CAAE,QAAQ,CACfC,WAAW,CAAE,mCAAmC,CAChDC,OAAO,CAAE,aACX,CAAC,CAAC,CACJ,CAAC,OAAS,CACRhC,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDI,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACvB,IAAI,CAAEA,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEE,OAAO,CAAC,CAAC,CAEzB1B,SAAS,CAAC,IAAM,CACd,GAAI,CAAC8B,UAAU,EAAI,CAACE,WAAW,EAAIQ,QAAQ,EAAI,CAAC,CAAE,OAElDM,QAAQ,CAAC8B,OAAO,CAAGC,WAAW,CAAC,IAAM,CACnCpC,WAAW,CAACqC,IAAI,EAAI,CAClB,GAAIA,IAAI,EAAI,CAAC,CAAE,CACbC,gBAAgB,CAAC,CAAC,CAClB,MAAO,EAAC,CACV,CACA,MAAO,CAAAD,IAAI,CAAG,CAAC,CACjB,CAAC,CAAC,CACJ,CAAC,CAAE,IAAI,CAAC,CAER,MAAO,IAAM,CACX,GAAIhC,QAAQ,CAAC8B,OAAO,CAAE,CACpBI,aAAa,CAAClC,QAAQ,CAAC8B,OAAO,CAAC,CACjC,CACF,CAAC,CACH,CAAC,CAAE,CAAC9C,UAAU,CAAEE,WAAW,CAAEQ,QAAQ,CAAC,CAAC,CAEvC,KAAM,CAAAyC,SAAS,CAAIhB,IAAuB,EAAK,CAC7CjB,OAAO,CAACC,GAAG,CAAE,2BAA2B,CAACgB,IAAI,CAAC,CAC9C,GAAI,CAACA,IAAI,CAAE,OAEX,KAAM,CAAAJ,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACtB,KAAM,CAAAM,SAAS,CAAG,GAAI,CAAAN,IAAI,CAACG,IAAI,CAACG,SAAS,CAAC,CAC1C,KAAM,CAAAE,OAAO,CAAG,GAAI,CAAAR,IAAI,CAACG,IAAI,CAACK,OAAO,CAAC,CAEtC,GAAIT,GAAG,CAAGO,SAAS,CAAE,CACnBpB,OAAO,CAACC,GAAG,CAAE,8BAA8B,CAAC,CAC5CtB,KAAK,CAAC,CACJ8C,KAAK,CAAE,uBAAuB,CAC9BC,WAAW,CAAE,wBAAwBN,SAAS,CAACc,cAAc,CAAC,CAAC,EAAE,CACjEP,OAAO,CAAE,aACX,CAAC,CAAC,CACF,OACF,CAEA,GAAId,GAAG,CAAGS,OAAO,CAAE,CACjBtB,OAAO,CAAEC,GAAG,CAAC,sBAAsB,CAAC,CACpCtB,KAAK,CAAC,CACJ8C,KAAK,CAAE,gBAAgB,CACvBC,WAAW,CAAE,6BAA6B,CAC1CC,OAAO,CAAE,aACX,CAAC,CAAC,CACF,OACF,CAEA,GAAI,CAACV,IAAI,CAACkB,SAAS,EAAI,CAACC,KAAK,CAACC,OAAO,CAACpB,IAAI,CAACkB,SAAS,CAAC,EAAIlB,IAAI,CAACkB,SAAS,CAACG,MAAM,GAAK,CAAC,CAAE,CACpFtC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC,CAChCtB,KAAK,CAAC,CACJ8C,KAAK,CAAE,iBAAiB,CACxBC,WAAW,CAAE,0CAA0C,CACvDC,OAAO,CAAE,aACX,CAAC,CAAC,CACF,OACF,CAEA5C,aAAa,CAACkC,IAAI,CAAC,CACnBxB,WAAW,CAAC8C,IAAI,CAACC,KAAK,CAAC,CAAClB,OAAO,CAACmB,OAAO,CAAC,CAAC,CAAG5B,GAAG,CAAC4B,OAAO,CAAC,CAAC,EAAI,IAAI,CAAC,CAAC,CACnEpD,kBAAkB,CAAC,CAAC,CAAC,CACrBE,UAAU,CAAC,CAAC,CAAC,CAAC,CACdN,cAAc,CAAC,IAAI,CAAC,CACpByD,UAAU,CAAC,IAAO,CAChB1C,OAAO,CAACC,GAAG,CAAE,2BAA2B,CAAC,CACzCD,OAAO,CAACC,GAAG,CAAC,aAAa,CAACgB,IAAI,CAAC,CAC/BjB,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CACnC,CAAC,CAAC,GAAG,CAAC,CACR,CAAC,CAED,KAAM,CAAA0C,YAAY,CAAGA,CAACC,UAAkB,CAAEC,WAAmB,GAAK,CAChE,GAAI,CAAC7D,WAAW,CAAE,OAClBO,UAAU,CAACuC,IAAI,GAAK,CAAE,GAAGA,IAAI,CAAE,CAACc,UAAU,EAAGC,WAAY,CAAC,CAAC,CAAC,CAC9D,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAIC,SAA0B,EAAK,CACvD,GAAI,CAACjE,UAAU,CAAE,OACjB,GAAIiE,SAAS,GAAK,MAAM,EAAI3D,eAAe,CAAG,CAAC,CAAE,CAC/CC,kBAAkB,CAACyC,IAAI,EAAIA,IAAI,CAAG,CAAC,CAAC,CACtC,CAAC,IAAM,IAAIiB,SAAS,GAAK,MAAM,EAAI3D,eAAe,CAAGN,UAAU,CAACqD,SAAS,CAACG,MAAM,CAAG,CAAC,CAAE,CACpFjD,kBAAkB,CAACyC,IAAI,EAAIA,IAAI,CAAG,CAAC,CAAC,CACtC,CACF,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CAACjD,UAAU,EAAI,CAACsD,KAAK,CAACC,OAAO,CAACvD,UAAU,CAACqD,SAAS,CAAC,CAAE,OAEzD,KAAM,CAAAa,KAAK,CAAGlE,UAAU,CAACqD,SAAS,CAACc,MAAM,CAAC,CAACC,GAAG,CAAEC,QAAQ,GAAK,CAC3D,MAAO,CAAAD,GAAG,EAAI5D,OAAO,CAAC6D,QAAQ,CAACC,EAAE,CAAC,GAAKD,QAAQ,CAACE,aAAa,CAAG,CAAC,CAAG,CAAC,CAAC,CACxE,CAAC,CAAE,CAAC,CAAC,CAEL,KAAM,CAAAC,UAAU,CAAGf,IAAI,CAACgB,KAAK,CAAEP,KAAK,CAAGlE,UAAU,CAACqD,SAAS,CAACG,MAAM,CAAI,GAAG,CAAC,CAC1E,KAAM,CAAAkB,SAAS,CAAG,CAClBC,MAAM,CAAE3E,UAAU,CAACsE,EAAE,CACrBJ,KAAK,CAAEM,UAAU,CACjBI,WAAW,CAAE,CAAAlF,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEmF,IAAI,GAAI,EAAE,CAC7BC,cAAc,CAAE9E,UAAU,CAACqD,SAAS,CAACG,MAAM,CAC3CuB,WAAW,CAAE,GAAI,CAAA/C,IAAI,CAAC,CAAC,CAACgD,WAAW,CAAC,CAAC,CACrCC,WAAW,CAAE,GAAI,CAAAjD,IAAI,CAAC,CAAC,CAACgD,WAAW,CAAC,CAAC,CACrCE,SAAS,CAAExF,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAE4E,EAAE,CACnB9D,OAAO,CAAEA,OAAO,CAChBZ,OAAO,CAAEF,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEE,OACjB,CAAC,CACCsB,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAEuD,SAAS,CAAC,CAI1D,GAAI,CACF,KAAM,CAAAS,QAAQ,CAAG,KAAM,CAAA9D,KAAK,CAAC,6CAA6C,CAAE,CAE1E+D,MAAM,CAAE,MAAM,CACd9D,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,eAAe,CAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAC1D,CAAC,CACF6D,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACb,SAAS,CAC/B,CAAC,CAAC,CACF,GAAI,CAACS,QAAQ,CAAC1D,EAAE,CAAE,CACtB,KAAM,CAAA+D,SAAS,CAAG,KAAM,CAAAL,QAAQ,CAACvD,IAAI,CAAC,CAAC,CACvCV,OAAO,CAACJ,KAAK,CAAC,iBAAiB,CAAE0E,SAAS,CAAC,CAC3C,KAAM,IAAI,CAAA9D,KAAK,CAAC8D,SAAS,CAACC,OAAO,EAAI,uBAAuB,CAAC,CAC/D,CAGMpF,UAAU,CAAC2C,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAE0B,SAAS,CAAC,CAAC,CACxC7E,KAAK,CAAC,CACJ8C,KAAK,CAAE,gBAAgB,CACvBC,WAAW,CAAE,gBAAgB4B,UAAU,GACzC,CAAC,CAAC,CACJ,CAAE,MAAO9B,GAAG,CAAE,CACZ7C,KAAK,CAAC,CACJ8C,KAAK,CAAE,QAAQ,CACfC,WAAW,CAAE,yCAAyC,CACtDC,OAAO,CAAE,aACX,CAAC,CAAC,CACJ,CAAC,OAAS,CACR5C,aAAa,CAAC,IAAI,CAAC,CACnBE,cAAc,CAAC,KAAK,CAAC,CACvB,CACF,CAAC,CAED,KAAM,CAAAuF,UAAU,CAAIC,OAAe,EAAK,CACtC,KAAM,CAAAC,IAAI,CAAGnC,IAAI,CAACC,KAAK,CAACiC,OAAO,CAAG,EAAE,CAAC,CACrC,KAAM,CAAAE,IAAI,CAAGF,OAAO,CAAG,EAAE,CACzB,MAAO,GAAGC,IAAI,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,IAAIF,IAAI,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,EAAE,CAClF,CAAC,CAED,GAAIjF,KAAK,CAAE,mBAAO3B,IAAA,QAAK6G,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEnF,KAAK,CAAM,CAAC,CAE9D,mBACE3B,IAAA,QAAK6G,SAAS,CAAC,qBAAqB,CAAAC,QAAA,CAEjC/F,WAAW,EAAIF,UAAU,cACxBX,KAAA,QAAK2G,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B5G,KAAA,WAAQ2G,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC7B5G,KAAA,QAAA4G,QAAA,eACE9G,IAAA,OAAA8G,QAAA,CAAKjG,UAAU,CAAC2C,KAAK,CAAK,CAAC,cAC3BtD,KAAA,MAAA4G,QAAA,EAAG,WAAS,CAAC3F,eAAe,CAAG,CAAC,CAAC,GAAC,CAACN,UAAU,CAACqD,SAAS,CAACG,MAAM,EAAI,CAAC,EAChE,CAAC,cACNnE,KAAA,QAAK2G,SAAS,CAAE,SAAStF,QAAQ,CAAG,GAAG,CAAG,SAAS,CAAG,EAAE,EAAG,CAAAuF,QAAA,eACzD9G,IAAA,CAACL,KAAK,EAACoH,IAAI,CAAE,EAAG,CAAE,CAAC,cACnB/G,IAAA,SAAA8G,QAAA,CAAOP,UAAU,CAAChF,QAAQ,CAAC,CAAO,CAAC,EAChC,CAAC,EACA,CAAC,cAETvB,IAAA,CAACP,QAAQ,EAACuH,KAAK,CAAG,CAAC7F,eAAe,CAAG,CAAC,EAAIN,UAAU,CAACqD,SAAS,CAACG,MAAM,CAAI,GAAI,CAACwC,SAAS,CAAC,cAAc,CAAE,CAAC,cAEzG3G,KAAA,QAAK2G,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5B9G,IAAA,OAAA8G,QAAA,CAAKjG,UAAU,CAACqD,SAAS,CAAC/C,eAAe,CAAC,CAAC+D,QAAQ,CAAK,CAAC,cACzDlF,IAAA,QAAK6G,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1BjG,UAAU,CAACqD,SAAS,CAAC/C,eAAe,CAAC,CAAC8F,OAAO,CAAChE,GAAG,CAAC,CAACiE,MAAM,CAAEC,KAAK,gBAC/DjH,KAAA,QAEE2G,SAAS,CAAE,UAAUxF,OAAO,CAACR,UAAU,CAACqD,SAAS,CAAC/C,eAAe,CAAC,CAACgE,EAAE,CAAC,GAAKgC,KAAK,CAAG,UAAU,CAAG,EAAE,EAAG,CACrGC,OAAO,CAAEA,CAAA,GAAM1C,YAAY,CAAC7D,UAAU,CAACqD,SAAS,CAAC/C,eAAe,CAAC,CAACgE,EAAE,CAAEgC,KAAK,CAAE,CAAAL,QAAA,eAE7E9G,IAAA,QAAK6G,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAC9BzF,OAAO,CAACR,UAAU,CAACqD,SAAS,CAAC/C,eAAe,CAAC,CAACgE,EAAE,CAAC,GAAKgC,KAAK,eAAInH,IAAA,QAAK6G,SAAS,CAAC,eAAe,CAAE,CAAC,CAC9F,CAAC,cACN7G,IAAA,SAAA8G,QAAA,CAAOI,MAAM,CAAO,CAAC,GAPhBC,KAQF,CACN,CAAC,CACC,CAAC,EACH,CAAC,cAENjH,KAAA,QAAK2G,SAAS,CAAC,oBAAoB,CAAAC,QAAA,eACjC9G,IAAA,CAACT,MAAM,EACL6H,OAAO,CAAEA,CAAA,GAAMvC,gBAAgB,CAAC,MAAM,CAAE,CACxCwC,QAAQ,CAAElG,eAAe,GAAK,CAAE,CAChCuC,OAAO,CAAC,SAAS,CAAAoD,QAAA,CAClB,iBAED,CAAQ,CAAC,CACR3F,eAAe,GAAKN,UAAU,CAACqD,SAAS,CAACG,MAAM,CAAG,CAAC,cAClDrE,IAAA,CAACT,MAAM,EAAC6H,OAAO,CAAEtD,gBAAiB,CAAC+C,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,UAE1D,CAAQ,CAAC,cAET9G,IAAA,CAACT,MAAM,EAAC6H,OAAO,CAAEA,CAAA,GAAMvC,gBAAgB,CAAC,MAAM,CAAE,CAAAiC,QAAA,CAAC,SAEjD,CAAQ,CACT,EACE,CAAC,EACH,CAAC,cAEN5G,KAAA,CAAAE,SAAA,EAAA0G,QAAA,eACE5G,KAAA,WAAQ2G,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAClC5G,KAAA,QAAA4G,QAAA,eACI9G,IAAA,QAAKsH,GAAG,CAAC,iDAAiD,CAAAC,GAAG,CAAC,UAAU,CAACC,KAAK,CAAC,IAAI,CAACC,MAAM,CAAC,IAAI,CAAO,CAAC,cACzGzH,IAAA,OAAA8G,QAAA,CAAI,6BAAwB,CAAI,CAAC,cACjC5G,KAAA,OAAA4G,QAAA,EAAI,YAAU,CAACvG,IAAI,CAAGA,IAAI,CAACmF,IAAI,CAAG,UAAU,EAAK,CAAC,cAClDxF,KAAA,MAAA4G,QAAA,EAAG,eAAU,CAACvG,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEE,OAAO,EAAI,CAAC,EAC7B,CAAC,cACNP,KAAA,CAACX,MAAM,EAAC6H,OAAO,CAAE5G,QAAS,CAACkD,OAAO,CAAC,SAAS,CAAAoD,QAAA,eAC1C9G,IAAA,CAACN,MAAM,EAACqH,IAAI,CAAE,EAAG,CAACF,SAAS,CAAC,MAAM,CAAE,CAAC,iBAEvC,EAAQ,CAAC,EACH,CAAC,cAET3G,KAAA,YAAS2G,SAAS,CAAC,eAAe,CAAAC,QAAA,eAChC9G,IAAA,OAAA8G,QAAA,CAAI,qBAAmB,CAAI,CAAC,CAC3BrF,OAAO,cACNzB,IAAA,MAAA8G,QAAA,CAAG,2BAAyB,CAAG,CAAC,CAC9BnG,KAAK,CAAC0D,MAAM,GAAK,CAAC,cACpBrE,IAAA,MAAA8G,QAAA,CAAG,yBAAuB,CAAG,CAAC,cAE9B9G,IAAA,QAAK6G,SAAS,CAAC,YAAY,CAAAC,QAAA,CACxBnG,KAAK,CAACsC,GAAG,CAAED,IAAI,eACd9C,KAAA,CAAChB,IAAI,EAAe2H,SAAS,CAAC,WAAW,CAAAC,QAAA,eACvC5G,KAAA,CAACb,UAAU,EAAAyH,QAAA,eACT5G,KAAA,CAACZ,SAAS,EAAAwH,QAAA,eACR9G,IAAA,CAACJ,QAAQ,EAACmH,IAAI,CAAE,EAAG,CAACF,SAAS,CAAC,MAAM,CAAE,CAAC,CACtC7D,IAAI,CAACQ,KAAK,EACF,CAAC,cACZxD,IAAA,CAACZ,eAAe,EAAA0H,QAAA,CAAE9D,IAAI,CAAC0E,OAAO,CAAkB,CAAC,cACjD1H,IAAA,CAACR,KAAK,EAACqH,SAAS,CAAE,UAAU7D,IAAI,CAACM,MAAM,EAAG,CAAAwD,QAAA,CACvC9D,IAAI,CAACM,MAAM,GAAK,QAAQ,CAAG,OAAO,CAClCN,IAAI,CAACM,MAAM,GAAK,UAAU,CAAG,SAAS,CAAG,SAAS,CAC9C,CAAC,EACE,CAAC,cAEXpD,KAAA,CAACf,WAAW,EAAA2H,QAAA,eACZ5G,KAAA,MAAA4G,QAAA,eAAG9G,IAAA,WAAA8G,QAAA,CAAQ,WAAM,CAAQ,CAAC,IAAC,CAAC9D,IAAI,CAAC2E,QAAQ,CAAC,MAAI,EAAG,CAAC,cAClDzH,KAAA,MAAA4G,QAAA,eAAG9G,IAAA,WAAA8G,QAAA,CAAQ,WAAM,CAAQ,CAAC,IAAC,CAAC,GAAI,CAAAjE,IAAI,CAACG,IAAI,CAACG,SAAS,CAAC,CAACc,cAAc,CAAC,CAAC,EAAI,CAAC,cAC1E/D,KAAA,MAAA4G,QAAA,eAAG9G,IAAA,WAAA8G,QAAA,CAAQ,MAAI,CAAQ,CAAC,IAAC,CAAC,GAAI,CAAAjE,IAAI,CAACG,IAAI,CAACK,OAAO,CAAC,CAACY,cAAc,CAAC,CAAC,EAAI,CAAC,CACrEjB,IAAI,CAACM,MAAM,GAAK,QAAQ,eACvBtD,IAAA,CAACT,MAAM,EAAC6H,OAAO,CAAEA,CAAA,GAAMpD,SAAS,CAAChB,IAAI,CAAE,CAAC6D,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAC,WAEnE,CAAQ,CACT,EACU,CAAC,GAtBL9D,IAAI,CAACmC,EAuBV,CACP,CAAC,CACC,CACN,EACM,CAAC,cAEVjF,KAAA,YAAS2G,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAClC9G,IAAA,OAAA8G,QAAA,CAAI,kBAAa,CAAI,CAAC,CACrBrF,OAAO,cACNzB,IAAA,MAAA8G,QAAA,CAAG,gCAA2B,CAAG,CAAC,CAChC7F,OAAO,CAACoD,MAAM,GAAK,CAAC,cACtBrE,IAAA,MAAA8G,QAAA,CAAG,8BAAyB,CAAG,CAAC,cAEhC9G,IAAA,QAAK6G,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1B7F,OAAO,CAACgC,GAAG,CAAC,CAAC2E,MAAM,CAAET,KAAK,GAAK,CAC9B,KAAM,CAAAnE,IAAI,CAAGrC,KAAK,CAACkH,IAAI,CAACC,CAAC,EAAIA,CAAC,CAAC3C,EAAE,GAAKyC,MAAM,CAACpC,MAAM,CAAC,CACpD,mBACExF,IAAA,CAACd,IAAI,EAAa2H,SAAS,CAAC,aAAa,CAAAC,QAAA,cACvC5G,KAAA,CAACf,WAAW,EAAA2H,QAAA,eACV5G,KAAA,QAAK2G,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5B9G,IAAA,OAAA8G,QAAA,CAAK,CAAA9D,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEQ,KAAK,GAAI,WAAWoE,MAAM,CAACpC,MAAM,EAAE,CAAK,CAAC,cACpDtF,KAAA,QAAK2G,SAAS,CAAE,SAASe,MAAM,CAAC7C,KAAK,EAAI,EAAE,CAAG,MAAM,CAAG,MAAM,EAAG,CAAA+B,QAAA,EAC7Dc,MAAM,CAAC7C,KAAK,CAAC,GAChB,EAAK,CAAC,EACH,CAAC,cACN7E,KAAA,QAAK2G,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7B5G,KAAA,MAAA4G,QAAA,EAAIxC,IAAI,CAACgB,KAAK,CAAEsC,MAAM,CAAC7C,KAAK,CAAG6C,MAAM,CAACjC,cAAc,CAAI,GAAG,CAAC,CAAC,GAAC,CAACiC,MAAM,CAACjC,cAAc,CAAC,qBAAgB,EAAG,CAAC,cAC1G3F,IAAA,MAAG6G,SAAS,CAAC,MAAM,CAAAC,QAAA,CAClCc,MAAM,CAAChC,WAAW,CAClB,GAAI,CAAA/C,IAAI,CAAC+E,MAAM,CAAChC,WAAW,CAAC,CAAC3B,cAAc,CAAC,OAAO,CAAE,CACvD8D,SAAS,CAAE,OAAO,CAClBC,SAAS,CAAE,OACb,CAAC,CAAC,CACF,qBAAqB,CACxB,CAAC,EAEyB,CAAC,EACK,CAAC,EApBLb,KAqBL,CAAC,CAEX,CAAC,CAAC,CACC,CACN,EACM,CAAC,EACV,CACH,CACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAA9G,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}