{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\upl.patforme\\\\frontend\\\\src\\\\components\\\\theme-provider.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext(null);\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState(\"light\");\n\n  // Optionnel : détecter le thème système au démarrage\n  useEffect(() => {\n    const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n    setTheme(prefersDark ? \"dark\" : \"light\");\n  }, []);\n\n  // Appliquer la classe au body pour gérer le CSS globalement\n  useEffect(() => {\n    document.body.classList.remove(\"light\", \"dark\");\n    document.body.classList.add(theme);\n  }, [theme]);\n  const toggleTheme = () => {\n    setTheme(prev => prev === \"light\" ? \"dark\" : \"light\");\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook personnalisé pour utiliser le contexte facilement\n_s(ThemeProvider, \"+6C7zX0KFXKdtXxqQH7LMHLz9vo=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error(\"useTheme doit être utilisé dans un ThemeProvider\");\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","prefersDark","window","matchMedia","matches","document","body","classList","remove","add","toggleTheme","prev","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/upl.patforme/frontend/src/components/theme-provider.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode, useEffect } from \"react\";\r\n\r\ntype Theme = \"light\" | \"dark\";\r\n\r\ninterface ThemeContextType {\r\n  theme: Theme;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | null>(null);\r\n\r\nexport const ThemeProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [theme, setTheme] = useState<Theme>(\"light\");\r\n\r\n  // Optionnel : détecter le thème système au démarrage\r\n  useEffect(() => {\r\n    const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n    setTheme(prefersDark ? \"dark\" : \"light\");\r\n  }, []);\r\n\r\n  // Appliquer la classe au body pour gérer le CSS globalement\r\n  useEffect(() => {\r\n    document.body.classList.remove(\"light\", \"dark\");\r\n    document.body.classList.add(theme);\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    setTheme(prev => (prev === \"light\" ? \"dark\" : \"light\"));\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook personnalisé pour utiliser le contexte facilement\r\nexport const useTheme = (): ThemeContextType => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error(\"useTheme doit être utilisé dans un ThemeProvider\");\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAaC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASzF,MAAMC,YAAY,gBAAGN,aAAa,CAA0B,IAAI,CAAC;AAEjE,OAAO,MAAMO,aAAgD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAQ,OAAO,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;IAC7EJ,QAAQ,CAACC,WAAW,GAAG,MAAM,GAAG,OAAO,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAT,SAAS,CAAC,MAAM;IACda,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC;IAC/CH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,GAAG,CAACV,KAAK,CAAC;EACpC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxBV,QAAQ,CAACW,IAAI,IAAKA,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EACzD,CAAC;EAED,oBACEjB,OAAA,CAACC,YAAY,CAACiB,QAAQ;IAACC,KAAK,EAAE;MAAEd,KAAK;MAAEW;IAAY,CAAE;IAAAb,QAAA,EAClDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;;AAED;AAAAnB,EAAA,CA1BaF,aAAgD;AAAAsB,EAAA,GAAhDtB,aAAgD;AA2B7D,OAAO,MAAMuB,QAAQ,GAAGA,CAAA,KAAwB;EAAAC,GAAA;EAC9C,MAAMC,OAAO,GAAG/B,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAAC0B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACrE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}