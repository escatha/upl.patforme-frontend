{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\upl.patforme\\\\frontend\\\\src\\\\contexts\\\\ExamContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/ExamContext.tsx\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamContext = /*#__PURE__*/createContext(undefined);\nexport const ExamProvider = ({\n  children\n}) => {\n  _s();\n  const [exams, setExams] = useState([]);\n  const [activeExam, setActiveExam] = useState(null);\n  const [examStarted, setExamStarted] = useState(false);\n  return /*#__PURE__*/_jsxDEV(ExamContext.Provider, {\n    value: {\n      exams,\n      setExams,\n      activeExam,\n      setActiveExam,\n      examStarted,\n      setExamStarted\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamProvider, \"m8xgNLpsqlrrP1H+l29rXAQ7YH0=\");\n_c = ExamProvider;\nexport const useExam = () => {\n  _s2();\n  const context = useContext(ExamContext);\n  if (!context) throw new Error(\"useExam must be used within an ExamProvider\");\n  return context;\n};\n_s2(useExam, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ExamProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","ExamContext","undefined","ExamProvider","children","_s","exams","setExams","activeExam","setActiveExam","examStarted","setExamStarted","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useExam","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/upl.patforme/frontend/src/contexts/ExamContext.tsx"],"sourcesContent":["// src/contexts/ExamContext.tsx\r\nimport React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\ninterface Question {\r\n  id: string;\r\n  question: string;\r\n  options: string[];\r\n  correctAnswer: number;\r\n}\r\n\r\ninterface Exam {\r\n  id: string;\r\n  title: string;\r\n  subject: string;\r\n  questions: Question[];\r\n  duration: number;\r\n  startTime: string;\r\n  endTime: string;\r\n  faculty: string;\r\n  status: 'upcoming' | 'active' | 'completed';\r\n}\r\n\r\ninterface ExamContextType {\r\n  exams: Exam[];\r\n  setExams: (exams: Exam[]) => void;\r\n  activeExam: Exam | null;\r\n  setActiveExam: (exam: Exam | null) => void;\r\n  examStarted: boolean;\r\n  setExamStarted: (started: boolean) => void;\r\n}\r\n\r\nconst ExamContext = createContext<ExamContextType | undefined>(undefined);\r\n\r\nexport const ExamProvider = ({ children }: { children: ReactNode }) => {\r\n  const [exams, setExams] = useState<Exam[]>([]);\r\n  const [activeExam, setActiveExam] = useState<Exam | null>(null);\r\n  const [examStarted, setExamStarted] = useState<boolean>(false);\r\n\r\n  return (\r\n    <ExamContext.Provider\r\n      value={{ exams, setExams, activeExam, setActiveExam, examStarted, setExamStarted }}\r\n    >\r\n      {children}\r\n    </ExamContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useExam = () => {\r\n  const context = useContext(ExamContext);\r\n  if (!context) throw new Error(\"useExam must be used within an ExamProvider\");\r\n  return context;\r\n};"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA8B9E,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAc,IAAI,CAAC;EAC/D,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAU,KAAK,CAAC;EAE9D,oBACEE,OAAA,CAACC,WAAW,CAACW,QAAQ;IACnBC,KAAK,EAAE;MAAEP,KAAK;MAAEC,QAAQ;MAAEC,UAAU;MAAEC,aAAa;MAAEC,WAAW;MAAEC;IAAe,CAAE;IAAAP,QAAA,EAElFA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACZ,EAAA,CAZWF,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAczB,OAAO,MAAMgB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGxB,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACoB,OAAO,EAAE,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAC5E,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CAJWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}