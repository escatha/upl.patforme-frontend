{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{useParams,useNavigate}from\"react-router-dom\";// Types\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ExamPage=_ref=>{let{user,onLogout}=_ref;const{id}=useParams();const[exam,setExam]=useState(null);const[answers,setAnswers]=useState({});const[loading,setLoading]=useState(true);const navigate=useNavigate();useEffect(()=>{const fetchExam=async()=>{try{const res=await fetch(`http://localhost:3001/api/exams/${id}`);const data=await res.json();const now=new Date();const start=new Date(data.startTime);const end=new Date(data.endTime);if(now>=start&&now<=end){data.status=\"active\";}else if(now<start){data.status=\"upcoming\";}else{data.status=\"completed\";}setExam(data);}catch(error){console.error(\"Erreur de chargement de l'examen :\",error);}finally{setLoading(false);}};if(id){fetchExam();}},[id]);const handleAnswerChange=(questionId,optionIndex)=>{setAnswers(prev=>({...prev,[questionId]:optionIndex}));};const handleSubmit=async()=>{if(!exam)return;let correct=0;exam.questions.forEach(q=>{if(answers[q.id]===q.correctAnswer){correct++;}});const totalQuestions=exam.questions.length;const score=Math.round(correct/totalQuestions*100);const payload={examId:exam.id,studentId:user.id,studentName:user.name,score:score,totalQuestions:totalQuestions,correctAnswers:correct,submittedAt:new Date().toISOString()};try{const res=await fetch(\"http://localhost:3001/api/results\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(payload)});if(res.ok){alert(`Examen soumis avec succès ! Vous avez obtenu ${score}%`);navigate(\"/student\");}else{alert(\"Erreur lors de la soumission des résultats.\");}}catch(error){console.error(\"Erreur lors de l'envoi :\",error);alert(\"Erreur réseau !\");}};if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Chargement de l'examen...\"});}if(!exam){return/*#__PURE__*/_jsx(\"div\",{children:\"Examen introuvable ou indisponible.\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold\",children:exam.title}),/*#__PURE__*/_jsxs(\"button\",{onClick:onLogout,className:\"text-red-600 underline text-sm\",children:[\"D\\xE9connexion (\",user.name,\")\"]})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Mati\\xE8re : \",exam.subject]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Dur\\xE9e : \",exam.duration,\" minutes\"]}),/*#__PURE__*/_jsx(\"hr\",{className:\"my-4\"}),/*#__PURE__*/_jsx(\"div\",{children:exam.questions.map((q,i)=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"font-semibold\",children:[i+1,\". \",q.question]}),q.options.map((opt,idx)=>/*#__PURE__*/_jsx(\"div\",{className:\"ml-4\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:q.id,checked:answers[q.id]===idx,onChange:()=>handleAnswerChange(q.id,idx)}),\" \",opt]})},idx))]},q.id))}),/*#__PURE__*/_jsx(\"button\",{className:\"bg-blue-600 text-white px-4 py-2 rounded\",onClick:handleSubmit,children:\"Soumettre l'examen\"})]});};export default ExamPage;","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsx","_jsx","jsxs","_jsxs","ExamPage","_ref","user","onLogout","id","exam","setExam","answers","setAnswers","loading","setLoading","navigate","fetchExam","res","fetch","data","json","now","Date","start","startTime","end","endTime","status","error","console","handleAnswerChange","questionId","optionIndex","prev","handleSubmit","correct","questions","forEach","q","correctAnswer","totalQuestions","length","score","Math","round","payload","examId","studentId","studentName","name","correctAnswers","submittedAt","toISOString","method","headers","body","JSON","stringify","ok","alert","children","className","title","onClick","subject","duration","map","i","question","options","opt","idx","type","checked","onChange"],"sources":["C:/Users/HP/Desktop/upl.patforme/frontend/src/pages/ExamPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\n// Types\r\ninterface Question {\r\n  id: string;\r\n  question: string;\r\n  options: string[];\r\n  correctAnswer: number;\r\n}\r\n\r\ninterface Exam {\r\n  id: string;\r\n  title: string;\r\n  subject: string;\r\n  duration: number;\r\n  questions: Question[];\r\n  startTime: string;\r\n  endTime: string;\r\n  status?: 'upcoming' | 'active' | 'completed';\r\n}\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  role: string;\r\n  faculty: string;\r\n}\r\n\r\ninterface ExamPageProps {\r\n  user: User;\r\n  onLogout: () => void;\r\n}\r\n\r\nconst ExamPage: React.FC<ExamPageProps> = ({ user, onLogout }) => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const [exam, setExam] = useState<Exam | null>(null);\r\n  const [answers, setAnswers] = useState<{ [questionId: string]: number }>({});\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchExam = async () => {\r\n      try {\r\n        const res = await fetch(`http://localhost:3001/api/exams/${id}`);\r\n        const data: Exam = await res.json();\r\n\r\n        const now = new Date();\r\n        const start = new Date(data.startTime);\r\n        const end = new Date(data.endTime);\r\n\r\n        if (now >= start && now <= end) {\r\n          data.status = \"active\";\r\n        } else if (now < start) {\r\n          data.status = \"upcoming\";\r\n        } else {\r\n          data.status = \"completed\";\r\n        }\r\n\r\n        setExam(data);\r\n      } catch (error) {\r\n        console.error(\"Erreur de chargement de l'examen :\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (id) {\r\n      fetchExam();\r\n    }\r\n  }, [id]);\r\n\r\n  const handleAnswerChange = (questionId: string, optionIndex: number) => {\r\n    setAnswers((prev) => ({ ...prev, [questionId]: optionIndex }));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!exam) return;\r\n\r\n    let correct = 0;\r\n\r\n    exam.questions.forEach((q) => {\r\n      if (answers[q.id] === q.correctAnswer) {\r\n        correct++;\r\n      }\r\n    });\r\n\r\n    const totalQuestions = exam.questions.length;\r\n    const score = Math.round((correct / totalQuestions) * 100);\r\n\r\n    const payload = {\r\n      examId: exam.id,\r\n      studentId: user.id,\r\n      studentName: user.name,\r\n      score: score,\r\n      totalQuestions: totalQuestions,\r\n      correctAnswers: correct,\r\n      submittedAt: new Date().toISOString(),\r\n    };\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:3001/api/results\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (res.ok) {\r\n        alert(`Examen soumis avec succès ! Vous avez obtenu ${score}%`);\r\n        navigate(\"/student\");\r\n      } else {\r\n        alert(\"Erreur lors de la soumission des résultats.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de l'envoi :\", error);\r\n      alert(\"Erreur réseau !\");\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Chargement de l'examen...</div>;\r\n  }\r\n\r\n  if (!exam) {\r\n    return <div>Examen introuvable ou indisponible.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h1 className=\"text-2xl font-bold\">{exam.title}</h1>\r\n        <button\r\n          onClick={onLogout}\r\n          className=\"text-red-600 underline text-sm\"\r\n        >\r\n          Déconnexion ({user.name})\r\n        </button>\r\n      </div>\r\n\r\n      <p>Matière : {exam.subject}</p>\r\n      <p>Durée : {exam.duration} minutes</p>\r\n      <hr className=\"my-4\" />\r\n\r\n      <div>\r\n        {exam.questions.map((q, i) => (\r\n          <div key={q.id} className=\"mb-6\">\r\n            <p className=\"font-semibold\">\r\n              {i + 1}. {q.question}\r\n            </p>\r\n            {q.options.map((opt, idx) => (\r\n              <div key={idx} className=\"ml-4\">\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name={q.id}\r\n                    checked={answers[q.id] === idx}\r\n                    onChange={() => handleAnswerChange(q.id, idx)}\r\n                  />{\" \"}\r\n                  {opt}\r\n                </label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <button\r\n        className=\"bg-blue-600 text-white px-4 py-2 rounded\"\r\n        onClick={handleSubmit}\r\n      >\r\n        Soumettre l'examen\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}