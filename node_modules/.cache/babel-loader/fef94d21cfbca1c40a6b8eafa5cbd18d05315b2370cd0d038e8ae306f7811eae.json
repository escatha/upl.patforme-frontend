{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\upl.patforme\\\\frontend\\\\src\\\\pages\\\\StudentDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"../components/ui/card\";\nimport { Button } from \"../components/ui/button\";\nimport { Badge } from \"../components/ui/badge\";\nimport { Progress } from \"../components/ui/progress\";\nimport { LogOut, Clock, BookOpen } from \"lucide-react\";\nimport { useToast } from \"../hooks/use-toast\";\nimport { useExam } from '../contexts/ExamContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StudentDashboard = ({\n  user,\n  onLogout\n}) => {\n  _s();\n  const {\n    faculty\n  } = useParams();\n  const {\n    toast\n  } = useToast();\n\n  // Utilisation du contexte Exam\n  const {\n    exams,\n    setExams,\n    activeExam,\n    setActiveExam,\n    examStarted,\n    setExamStarted\n  } = useExam();\n  const [results, setResults] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const timerRef = useRef(null);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/api/exams/debug/all\").then(res => res.json()).then(data => console.log(\"📋 Tous les examens :\", data)).catch(err => console.error(\"❌ Erreur fetch debug :\", err));\n  }, []);\n  useEffect(() => {\n    if (!user || !user.faculty) {\n      setError(\"Utilisateur ou faculté non renseigné.\");\n      return;\n    }\n    const fetchData = async () => {\n      console.log(\"📩 Requête reçue pour faculty :\", user.faculty);\n      try {\n        setLoading(true);\n        setError(null);\n        const examsResponse = await fetch(`http://localhost:3001/api/exams/scheduled?faculty=${user.faculty}`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (!examsResponse.ok) throw new Error('Failed to fetch exams');\n        const examsData = await examsResponse.json();\n        console.log(\"donner recue du backend\");\n        const resultsResponse = await fetch('http://localhost:3001/api/results', {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (!resultsResponse.ok) throw new Error('Failed to fetch results');\n        const resultsData = await resultsResponse.json();\n        const now = new Date();\n        const filteredExams = examsData.filter(exam => exam.faculty === user.faculty).map(exam => {\n          const start = new Date(exam.startTime);\n          const end = new Date(exam.endTime);\n          let status = 'upcoming';\n          if (now > end) status = 'completed';else if (now >= start) status = 'active';\n          return {\n            ...exam,\n            status\n          };\n        });\n        setExams(filteredExams);\n        setResults(resultsData);\n      } catch (err) {\n        setError(\"Erreur lors du chargement des données\");\n        toast({\n          title: \"Erreur\",\n          description: \"Impossible de charger les examens\",\n          variant: \"destructive\"\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [user, user === null || user === void 0 ? void 0 : user.faculty]);\n  useEffect(() => {\n    if (!activeExam || !examStarted || timeLeft <= 0) return;\n    timerRef.current = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          handleSubmitExam();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [activeExam, examStarted, timeLeft]);\n  const startExam = exam => {\n    console.log(\" startExam appeler avec :\", exam);\n    if (!exam) return;\n    const now = new Date();\n    const startTime = new Date(exam.startTime);\n    const endTime = new Date(exam.endTime);\n    if (now < startTime) {\n      console.log(\"examen pas encors commencer \");\n      toast({\n        title: \"Examen non disponible\",\n        description: `L'examen commence le ${startTime.toLocaleString()}`,\n        variant: \"destructive\"\n      });\n      return;\n    }\n    if (now > endTime) {\n      console.log(\"examen deja terminer\");\n      toast({\n        title: \"Examen terminé\",\n        description: \"Le temps imparti est écoulé\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n    if (!exam.questions || !Array.isArray(exam.questions) || exam.questions.length === 0) {\n      console.log(\"pas des question \");\n      toast({\n        title: \"Examen invalide\",\n        description: \"Aucune question trouvée pour cet examen.\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n    setActiveExam(exam);\n    setTimeLeft(Math.floor((endTime.getTime() - now.getTime()) / 1000));\n    setCurrentQuestion(0);\n    setAnswers({});\n    setExamStarted(true);\n    setTimeout(() => {\n      console.log(\"verifiecation apres 500ms\");\n      console.log(\"activeExam=\", exam);\n      console.log(\"examStarted =\", true);\n    }, 500);\n  };\n  const selectAnswer = (questionId, answerIndex) => {\n    if (!examStarted) return;\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: answerIndex\n    }));\n  };\n  const navigateQuestion = direction => {\n    if (!activeExam) return;\n    if (direction === 'prev' && currentQuestion > 0) {\n      setCurrentQuestion(prev => prev - 1);\n    } else if (direction === 'next' && currentQuestion < activeExam.questions.length - 1) {\n      setCurrentQuestion(prev => prev + 1);\n    }\n  };\n  const handleSubmitExam = async () => {\n    if (!activeExam || !Array.isArray(activeExam.questions)) return;\n    const score = activeExam.questions.reduce((acc, question) => {\n      return acc + (answers[question.id] === question.correctAnswer ? 1 : 0);\n    }, 0);\n    const percentage = Math.round(score / activeExam.questions.length * 100);\n    const newResult = {\n      examId: activeExam.id,\n      score: percentage,\n      totalQuestions: activeExam.questions.length,\n      completedAt: new Date().toISOString()\n    };\n    try {\n      const response = await fetch('http://localhost:3001/api/submit-exam', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          examId: activeExam.id,\n          answers,\n          completedAt: new Date().toISOString()\n        })\n      });\n      if (!response.ok) throw new Error('Failed to submit exam');\n      setResults(prev => [...prev, newResult]);\n      toast({\n        title: \"Examen terminé\",\n        description: `Votre score: ${percentage}%`\n      });\n    } catch (err) {\n      toast({\n        title: \"Erreur\",\n        description: \"Échec de l'enregistrement des résultats\",\n        variant: \"destructive\"\n      });\n    } finally {\n      setActiveExam(null);\n      setExamStarted(false);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: examStarted && activeExam ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"exam-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"exam-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: activeExam.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Question \", currentQuestion + 1, \"/\", activeExam.questions.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `timer ${timeLeft < 300 ? 'warning' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatTime(timeLeft)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Progress, {\n        value: (currentQuestion + 1) / activeExam.questions.length * 100,\n        className: \"progress-bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: activeExam.questions[currentQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-grid\",\n          children: activeExam.questions[currentQuestion].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `option ${answers[activeExam.questions[currentQuestion].id] === index ? 'selected' : ''}`,\n            onClick: () => selectAnswer(activeExam.questions[currentQuestion].id, index),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"option-indicator\",\n              children: answers[activeExam.questions[currentQuestion].id] === index && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"indicator-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 85\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigateQuestion('prev'),\n          disabled: currentQuestion === 0,\n          variant: \"outline\",\n          children: \"Pr\\xE9c\\xE9dent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), currentQuestion === activeExam.questions.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmitExam,\n          className: \"submit-btn\",\n          children: \"Terminer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigateQuestion('next'),\n          children: \"Suivant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"dashboard-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Tableau de Bord \\xC9tudiant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Bienvenue \", user ? user.name : \"Étudiant\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Facult\\xE9 : \", user === null || user === void 0 ? void 0 : user.faculty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onLogout,\n          variant: \"outline\",\n          children: [/*#__PURE__*/_jsxDEV(LogOut, {\n            size: 16,\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), \"D\\xE9connexion\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"exams-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Examens Disponibles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Chargement des examens...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 15\n        }, this) : exams.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Aucun examen disponible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"exams-grid\",\n          children: exams.map(exam => /*#__PURE__*/_jsxDEV(Card, {\n            className: \"exam-card\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n                children: [/*#__PURE__*/_jsxDEV(BookOpen, {\n                  size: 16,\n                  className: \"mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 25\n                }, this), exam.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(CardDescription, {\n                children: exam.subject\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                className: `status-${exam.status}`,\n                children: exam.status === 'active' ? 'Actif' : exam.status === 'upcoming' ? 'À venir' : 'Terminé'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Dur\\xE9e:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 26\n                }, this), \" \", exam.duration, \" min\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"D\\xE9but:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 26\n                }, this), \" \", new Date(exam.startTime).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Fin:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 26\n                }, this), \" \", new Date(exam.endTime).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 23\n              }, this), exam.status === 'active' && /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => startExam(exam),\n                className: \"start-exam-btn\",\n                children: \"Commencer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 23\n            }, this)]\n          }, exam.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"results-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Mes R\\xE9sultats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Chargement des r\\xE9sultats...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 15\n        }, this) : results.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Aucun r\\xE9sultat disponible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-list\",\n          children: results.map((result, index) => {\n            const exam = exams.find(e => e.id === result.examId);\n            return /*#__PURE__*/_jsxDEV(Card, {\n              className: \"result-card\",\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: (exam === null || exam === void 0 ? void 0 : exam.title) || `Examen #${result.examId}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 401,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `score ${result.score >= 60 ? 'pass' : 'fail'}`,\n                    children: [result.score, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [Math.round(result.score * result.totalQuestions / 100), \"/\", result.totalQuestions, \" bonnes r\\xE9ponses\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"date\",\n                    children: new Date(result.completedAt).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentDashboard, \"7HtOfJStAfiddRof12sOCWswo/g=\", false, function () {\n  return [useParams, useToast, useExam];\n});\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","Card","CardContent","CardDescription","CardHeader","CardTitle","Button","Badge","Progress","LogOut","Clock","BookOpen","useToast","useExam","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentDashboard","user","onLogout","_s","faculty","toast","exams","setExams","activeExam","setActiveExam","examStarted","setExamStarted","results","setResults","currentQuestion","setCurrentQuestion","answers","setAnswers","timeLeft","setTimeLeft","loading","setLoading","error","setError","timerRef","fetch","then","res","json","data","console","log","catch","err","fetchData","examsResponse","headers","localStorage","getItem","ok","Error","examsData","resultsResponse","resultsData","now","Date","filteredExams","filter","exam","map","start","startTime","end","endTime","status","title","description","variant","current","setInterval","prev","handleSubmitExam","clearInterval","startExam","toLocaleString","questions","Array","isArray","length","Math","floor","getTime","setTimeout","selectAnswer","questionId","answerIndex","navigateQuestion","direction","score","reduce","acc","question","id","correctAnswer","percentage","round","newResult","examId","totalQuestions","completedAt","toISOString","response","method","body","JSON","stringify","formatTime","seconds","mins","secs","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","value","options","option","index","onClick","disabled","name","subject","duration","result","find","e","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/upl.patforme/frontend/src/pages/StudentDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"../components/ui/card\";\r\nimport { Button } from \"../components/ui/button\";\r\nimport { Badge } from \"../components/ui/badge\";\r\nimport { Progress } from \"../components/ui/progress\";\r\nimport { LogOut, Clock, CheckCircle, BookOpen } from \"lucide-react\";\r\nimport { useToast } from \"../hooks/use-toast\";\r\nimport { useExam } from '../contexts/ExamContext';\r\ninterface Exam {\r\n  id: string;\r\n  title: string;\r\n  subject: string;\r\n  duration: number;\r\n  startTime: string;\r\n  endTime: string;\r\n  questions: Question[];\r\n  status: 'upcoming' | 'active' | 'completed';\r\n}\r\n\r\ninterface Question {\r\n  id: string;\r\n  question: string;\r\n  options: string[];\r\n  correctAnswer: number;\r\n}\r\n\r\ninterface User {\r\n  id: string;\r\n  username: string;\r\n  role: string;\r\n  name: string;\r\n  faculty: string;\r\n}\r\n\r\ninterface ExamResult {\r\n  examId: string;\r\n  score: number;\r\n  totalQuestions: number;\r\n  completedAt: string;\r\n}\r\n\r\ninterface StudentDashboardProps {\r\n  user: User | null;\r\n  onLogout: () => void;\r\n}\r\n\r\nconst StudentDashboard: React.FC<StudentDashboardProps> = ({ user, onLogout }) => {\r\n  const { faculty } = useParams();\r\n  const { toast } = useToast();\r\n\r\n  // Utilisation du contexte Exam\r\n  const {\r\n    exams,\r\n    setExams,\r\n    activeExam,\r\n    setActiveExam,\r\n    examStarted,\r\n    setExamStarted\r\n  } = useExam();\r\n\r\n  const [results, setResults] = useState<ExamResult[]>([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [answers, setAnswers] = useState<{ [key: string]: number }>({});\r\n  const [timeLeft, setTimeLeft] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\r\nuseEffect(() => {\r\n  fetch(\"http://localhost:3000/api/exams/debug/all\")\r\n    .then(res => res.json())\r\n    .then(data => console.log(\"📋 Tous les examens :\", data))\r\n    .catch(err => console.error(\"❌ Erreur fetch debug :\", err));\r\n}, []);\r\n\r\n  useEffect(() => {\r\n    if (!user || !user.faculty) {\r\n  setError(\"Utilisateur ou faculté non renseigné.\");\r\n  return;\r\n}\r\n  \r\n  const fetchData = async () => {\r\n      console.log(\"📩 Requête reçue pour faculty :\", user.faculty );\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        const examsResponse = await fetch(`http://localhost:3001/api/exams/scheduled?faculty=${user.faculty}`, {\r\n\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n        if (!examsResponse.ok) throw new Error('Failed to fetch exams');\r\n        const examsData = await examsResponse.json();\r\n        console.log (\"donner recue du backend\")\r\n\r\n        const resultsResponse = await fetch('http://localhost:3001/api/results', {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n        if (!resultsResponse.ok) throw new Error('Failed to fetch results');\r\n        const resultsData = await resultsResponse.json();\r\n\r\n        const now = new Date();\r\n        const filteredExams = examsData\r\n          .filter((exam: any) => exam.faculty === user.faculty)\r\n          .map((exam: any) => {\r\n            const start = new Date(exam.startTime);\r\n            const end = new Date(exam.endTime);\r\n            let status: 'upcoming' | 'active' | 'completed' = 'upcoming';\r\n            if (now > end) status = 'completed';\r\n            else if (now >= start) status = 'active';\r\n            return { ...exam, status };\r\n          });\r\n\r\n        setExams(filteredExams);\r\n        setResults(resultsData);\r\n      } catch (err) {\r\n        setError(\"Erreur lors du chargement des données\");\r\n        toast({\r\n          title: \"Erreur\",\r\n          description: \"Impossible de charger les examens\",\r\n          variant: \"destructive\",\r\n        });\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [user, user?.faculty]);\r\n\r\n  useEffect(() => {\r\n    if (!activeExam || !examStarted || timeLeft <= 0) return;\r\n\r\n    timerRef.current = setInterval(() => {\r\n      setTimeLeft(prev => {\r\n        if (prev <= 1) {\r\n          handleSubmitExam();\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current);\r\n      }\r\n    };\r\n  }, [activeExam, examStarted, timeLeft]);\r\n\r\n  const startExam = (exam: typeof activeExam) => {\r\n    console.log (\" startExam appeler avec :\",exam)\r\n    if (!exam) return;\r\n\r\n    const now = new Date();\r\n    const startTime = new Date(exam.startTime);\r\n    const endTime = new Date(exam.endTime);\r\n\r\n    if (now < startTime) {\r\n      console.log (\"examen pas encors commencer \");\r\n      toast({\r\n        title: \"Examen non disponible\",\r\n        description: `L'examen commence le ${startTime.toLocaleString()}`,\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (now > endTime) {\r\n      console. log(\"examen deja terminer\");\r\n      toast({\r\n        title: \"Examen terminé\",\r\n        description: \"Le temps imparti est écoulé\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!exam.questions || !Array.isArray(exam.questions) || exam.questions.length === 0) {\r\n      console.log(\"pas des question \")\r\n      toast({\r\n        title: \"Examen invalide\",\r\n        description: \"Aucune question trouvée pour cet examen.\",\r\n        variant: \"destructive\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    setActiveExam(exam);\r\n    setTimeLeft(Math.floor((endTime.getTime() - now.getTime()) / 1000));\r\n    setCurrentQuestion(0);\r\n    setAnswers({});\r\n    setExamStarted(true);\r\n    setTimeout(()  => {\r\n      console.log (\"verifiecation apres 500ms\");\r\n      console.log(\"activeExam=\",exam);\r\n      console.log(\"examStarted =\",true);\r\n    },500)\r\n  };\r\n\r\n  const selectAnswer = (questionId: string, answerIndex: number) => {\r\n    if (!examStarted) return;\r\n    setAnswers(prev => ({ ...prev, [questionId]: answerIndex }));\r\n  };\r\n\r\n  const navigateQuestion = (direction: 'prev' | 'next') => {\r\n    if (!activeExam) return;\r\n    if (direction === 'prev' && currentQuestion > 0) {\r\n      setCurrentQuestion(prev => prev - 1);\r\n    } else if (direction === 'next' && currentQuestion < activeExam.questions.length - 1) {\r\n      setCurrentQuestion(prev => prev + 1);\r\n    }\r\n  };\r\n\r\n  const handleSubmitExam = async () => {\r\n    if (!activeExam || !Array.isArray(activeExam.questions)) return;\r\n\r\n    const score = activeExam.questions.reduce((acc, question) => {\r\n      return acc + (answers[question.id] === question.correctAnswer ? 1 : 0);\r\n    }, 0);\r\n\r\n    const percentage = Math.round((score / activeExam.questions.length) * 100);\r\n    const newResult = {\r\n      examId: activeExam.id,\r\n      score: percentage,\r\n      totalQuestions: activeExam.questions.length,\r\n      completedAt: new Date().toISOString()\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3001/api/submit-exam', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n        },\r\n        body: JSON.stringify({\r\n          examId: activeExam.id,\r\n          answers,\r\n          completedAt: new Date().toISOString()\r\n        })\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Failed to submit exam');\r\n\r\n      setResults(prev => [...prev, newResult]);\r\n      toast({\r\n        title: \"Examen terminé\",\r\n        description: `Votre score: ${percentage}%`,\r\n      });\r\n    } catch (err) {\r\n      toast({\r\n        title: \"Erreur\",\r\n        description: \"Échec de l'enregistrement des résultats\",\r\n        variant: \"destructive\",\r\n      });\r\n    } finally {\r\n      setActiveExam(null);\r\n      setExamStarted(false);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds: number) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  if (error) return <div className=\"error-message\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      {examStarted && activeExam ? (\r\n        <div className=\"exam-container\">\r\n          <header className=\"exam-header\">\r\n            <div>\r\n              <h1>{activeExam.title}</h1>\r\n              <p>Question {currentQuestion + 1}/{activeExam.questions.length}</p>\r\n            </div>\r\n            <div className={`timer ${timeLeft < 300 ? 'warning' : ''}`}>\r\n              <Clock size={18} />\r\n              <span>{formatTime(timeLeft)}</span>\r\n            </div>\r\n          </header>\r\n\r\n          <Progress value={((currentQuestion + 1) / activeExam.questions.length) * 100} className=\"progress-bar\" />\r\n\r\n          <div className=\"question-card\">\r\n            <h2>{activeExam.questions[currentQuestion].question}</h2>\r\n            <div className=\"options-grid\">\r\n              {activeExam.questions[currentQuestion].options.map((option, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`option ${answers[activeExam.questions[currentQuestion].id] === index ? 'selected' : ''}`}\r\n                  onClick={() => selectAnswer(activeExam.questions[currentQuestion].id, index)}\r\n                >\r\n                  <div className=\"option-indicator\">\r\n                    {answers[activeExam.questions[currentQuestion].id] === index && <div className=\"indicator-dot\" />}\r\n                  </div>\r\n                  <span>{option}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"navigation-buttons\">\r\n            <Button\r\n              onClick={() => navigateQuestion('prev')}\r\n              disabled={currentQuestion === 0}\r\n              variant=\"outline\"\r\n            >\r\n              Précédent\r\n            </Button>\r\n            {currentQuestion === activeExam.questions.length - 1 ? (\r\n              <Button onClick={handleSubmitExam} className=\"submit-btn\">\r\n                Terminer\r\n              </Button>\r\n            ) : (\r\n              <Button onClick={() => navigateQuestion('next')}>\r\n                Suivant\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <header className=\"dashboard-header\">\r\n            <div>\r\n              <h1>Tableau de Bord Étudiant</h1>\r\n              <h2>Bienvenue {user ? user.name : \"Étudiant\"}</h2>\r\n              <p>Faculté : {user?.faculty}</p>\r\n            </div>\r\n            <Button onClick={onLogout} variant=\"outline\">\r\n              <LogOut size={16} className=\"mr-2\" />\r\n              Déconnexion\r\n            </Button>\r\n          </header>\r\n\r\n          <section className=\"exams-section\">\r\n            <h2>Examens Disponibles</h2>\r\n            {loading ? (\r\n              <p>Chargement des examens...</p>\r\n            ) : exams.length === 0 ? (\r\n              <p>Aucun examen disponible</p>\r\n            ) : (\r\n              <div className=\"exams-grid\">\r\n                {exams.map((exam) => (\r\n                  <Card key={exam.id} className=\"exam-card\">\r\n                    <CardHeader>\r\n                      <CardTitle>\r\n                        <BookOpen size={16} className=\"mr-2\" />\r\n                        {exam.title}\r\n                      </CardTitle>\r\n                      <CardDescription>{exam.subject}</CardDescription>\r\n                      <Badge className={`status-${exam.status}`}>\r\n                        {exam.status === 'active' ? 'Actif' :\r\n                         exam.status === 'upcoming' ? 'À venir' : 'Terminé'}\r\n                      </Badge>\r\n                    </CardHeader>\r\n                    \r\n                      <CardContent>\r\n                      <p><strong>Durée:</strong> {exam.duration} min</p>\r\n                      <p><strong>Début:</strong> {new Date(exam.startTime).toLocaleString()}</p>\r\n                      <p><strong>Fin:</strong> {new Date(exam.endTime).toLocaleString()}</p>\r\n                      {exam.status === 'active' && (\r\n                        <Button onClick={() => startExam(exam)} className=\"start-exam-btn\">\r\n                          Commencer\r\n                        </Button>\r\n                      )}\r\n                    </CardContent>\r\n                  </Card>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </section>\r\n\r\n          <section className=\"results-section\">\r\n            <h2>Mes Résultats</h2>\r\n            {loading ? (\r\n              <p>Chargement des résultats...</p>\r\n            ) : results.length === 0 ? (\r\n              <p>Aucun résultat disponible</p>\r\n            ) : (\r\n              <div className=\"results-list\">\r\n                {results.map((result, index) => {\r\n                  const exam = exams.find(e => e.id === result.examId);\r\n                  return (\r\n                    <Card key={index} className=\"result-card\">\r\n                      <CardContent>\r\n                        <div className=\"result-header\">\r\n                          <h3>{exam?.title || `Examen #${result.examId}`}</h3>\r\n                          <div className={`score ${result.score >= 60 ? 'pass' : 'fail'}`}>\r\n                            {result.score}%\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"result-details\">\r\n                          <p>{Math.round((result.score * result.totalQuestions) / 100)}/{result.totalQuestions} bonnes réponses</p>\r\n                          <p className=\"date\">\r\n                            {new Date(result.completedAt).toLocaleDateString()}\r\n                          </p>\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </section>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentDashboard;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}