{"ast":null,"code":"import React,{useState}from'react';import{useUser}from'../contexts/UserContext';import QuestionnaireList from'../components/QuestionnaireList';import\"./TeacherDashboard.css\";// Interfaces\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const TeacherDashboard=_ref=>{let{user,onLogout}=_ref;const{setUser}=useUser();if(!user||!user.id){return/*#__PURE__*/_jsx(\"div\",{children:\"Utilisateur non connect\\xE9 ou invalide.\"});}const[questionnaires,setQuestionnaires]=useState([]);const[currentQuestionnaire,setCurrentQuestionnaire]=useState(null);const[isCreatingNew,setIsCreatingNew]=useState(false);const[searchTerm,setSearchTerm]=useState('');const showToast=(title,description)=>{alert(`${title}: ${description}`);};const createNewQuestionnaire=()=>{const newQuestionnaire={id:Date.now().toString(),title:'',subject:'',questions:[],status:'draft',teacherId:user.id,duration:60,faculty:user.faculty};setCurrentQuestionnaire(newQuestionnaire);setIsCreatingNew(true);};const addQuestion=()=>{if(!currentQuestionnaire)return;const newQuestion={id:Date.now().toString(),question:'',options:['','','',''],correctAnswer:0};setCurrentQuestionnaire({...currentQuestionnaire,questions:[...currentQuestionnaire.questions,newQuestion]});};const updateQuestion=(questionId,field,value)=>{if(!currentQuestionnaire)return;setCurrentQuestionnaire({...currentQuestionnaire,questions:currentQuestionnaire.questions.map(q=>q.id===questionId?{...q,[field]:value}:q)});};const updateQuestionOption=(questionId,optionIndex,value)=>{if(!currentQuestionnaire)return;setCurrentQuestionnaire({...currentQuestionnaire,questions:currentQuestionnaire.questions.map(q=>q.id===questionId?{...q,options:q.options.map((opt,idx)=>idx===optionIndex?value:opt)}:q)});};const removeQuestion=questionId=>{if(!currentQuestionnaire)return;if(window.confirm('Êtes-vous sûr de vouloir supprimer cette question ?')){setCurrentQuestionnaire({...currentQuestionnaire,questions:currentQuestionnaire.questions.filter(q=>q.id!==questionId)});}};const saveQuestionnaire=()=>{if(!currentQuestionnaire)return;if(!currentQuestionnaire.title.trim()||!currentQuestionnaire.subject.trim()){return showToast('Erreur','Veuillez remplir le titre et la matière');}if(currentQuestionnaire.questions.length===0){return showToast('Erreur','Veuillez ajouter au moins une question');}if(isCreatingNew){setQuestionnaires(prev=>[...prev,currentQuestionnaire]);}else{setQuestionnaires(prev=>prev.map(q=>q.id===currentQuestionnaire.id?currentQuestionnaire:q));}showToast('Succès','Questionnaire sauvegardé');setCurrentQuestionnaire(null);setIsCreatingNew(false);};const submitQuestionnaire=async questionnaire=>{try{const payload={title:questionnaire.title,subject:questionnaire.subject,duration:questionnaire.duration,faculty:questionnaire.faculty,teacherId:questionnaire.teacherId,teacherName:user.name,questions:questionnaire.questions.map(q=>({question_text:q.question,options:q.options,correct_answer:q.correctAnswer}))};console.log(\"Payload envoyé :\",payload);const response=await fetch('http://localhost:3001/api/questionnaires/submit',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});if(!response.ok){const errorText=await response.text();return showToast('Erreur',errorText);}setQuestionnaires(prev=>prev.map(q=>q.id===questionnaire.id?{...questionnaire,status:'submitted',submittedAt:new Date().toISOString()}:q));showToast('Succès','Questionnaire soumis avec succès !');setCurrentQuestionnaire(null);}catch(error){console.error('Erreur dans submitQuestionnaire :',error);showToast('Erreur','Échec de la soumission du questionnaire.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-container\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"https://i.postimg.cc/mZwbqh7Z/1752262954454.jpg\",alt:\"logo UPL\",width:\"60\",height:\"60\"}),/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Bienvenue \",user.name,\" \\uD83D\\uDC4B\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Facult\\xE9 : \",user.faculty]}),/*#__PURE__*/_jsx(\"button\",{onClick:onLogout,children:\"D\\xE9connexion\"})]}),/*#__PURE__*/_jsx(QuestionnaireList,{faculty:user.faculty}),/*#__PURE__*/_jsxs(\"div\",{className:\"create-section\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:createNewQuestionnaire,children:\"Cr\\xE9er un nouveau questionnaire\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Rechercher un questionnaire...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value)})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Mes Questionnaires\"}),questionnaires.filter(q=>q.title.toLowerCase().includes(searchTerm.toLowerCase())).map(q=>/*#__PURE__*/_jsxs(\"div\",{className:\"questionnaire-item\",children:[/*#__PURE__*/_jsx(\"h3\",{children:q.title}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Mati\\xE8re : \",q.subject]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Dur\\xE9e : \",q.duration,\" minutes\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[q.questions.length,\" questions\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Statut : \",q.status]}),q.status==='draft'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentQuestionnaire(q),children:\"Modifier\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>submitQuestionnaire(q),children:\"Soumettre\"})]})]},q.id)),currentQuestionnaire&&/*#__PURE__*/_jsxs(\"div\",{className:\"questionnaire-editor\",children:[/*#__PURE__*/_jsx(\"h2\",{children:isCreatingNew?'Nouveau Questionnaire':'Modifier le Questionnaire'}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:currentQuestionnaire.title,placeholder:\"Titre\",onChange:e=>setCurrentQuestionnaire({...currentQuestionnaire,title:e.target.value})}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:currentQuestionnaire.subject,placeholder:\"Mati\\xE8re\",onChange:e=>setCurrentQuestionnaire({...currentQuestionnaire,subject:e.target.value})}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:currentQuestionnaire.duration,placeholder:\"Dur\\xE9e (minutes)\",onChange:e=>setCurrentQuestionnaire({...currentQuestionnaire,duration:Number(e.target.value)})}),/*#__PURE__*/_jsx(\"button\",{onClick:addQuestion,children:\"Ajouter une question\"}),currentQuestionnaire.questions.map((question,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"textarea\",{value:question.question,onChange:e=>updateQuestion(question.id,'question',e.target.value),placeholder:`Question ${index+1}`}),question.options.map((opt,optIndex)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",name:`correct-${question.id}`,checked:question.correctAnswer===optIndex,onChange:()=>updateQuestion(question.id,'correctAnswer',optIndex)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:opt,placeholder:`Option ${optIndex+1}`,onChange:e=>updateQuestionOption(question.id,optIndex,e.target.value)})]},optIndex)),/*#__PURE__*/_jsx(\"button\",{onClick:()=>removeQuestion(question.id),children:\"Supprimer Question\"})]},question.id)),/*#__PURE__*/_jsx(\"button\",{onClick:saveQuestionnaire,children:\"Sauvegarder\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setCurrentQuestionnaire(null);setIsCreatingNew(false);},children:\"Annuler\"})]})]});};export default TeacherDashboard;","map":{"version":3,"names":["React","useState","useUser","QuestionnaireList","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TeacherDashboard","_ref","user","onLogout","setUser","id","children","questionnaires","setQuestionnaires","currentQuestionnaire","setCurrentQuestionnaire","isCreatingNew","setIsCreatingNew","searchTerm","setSearchTerm","showToast","title","description","alert","createNewQuestionnaire","newQuestionnaire","Date","now","toString","subject","questions","status","teacherId","duration","faculty","addQuestion","newQuestion","question","options","correctAnswer","updateQuestion","questionId","field","value","map","q","updateQuestionOption","optionIndex","opt","idx","removeQuestion","window","confirm","filter","saveQuestionnaire","trim","length","prev","submitQuestionnaire","questionnaire","payload","teacherName","name","question_text","correct_answer","console","log","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","submittedAt","toISOString","error","className","src","alt","width","height","onClick","type","placeholder","onChange","e","target","toLowerCase","includes","Number","index","optIndex","checked"],"sources":["C:/Users/HP/Desktop/upl.patforme/frontend/src/pages/TeacherDashboard.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useUser } from '../contexts/UserContext';\r\nimport QuestionnaireList from '../components/QuestionnaireList';\r\nimport \"./TeacherDashboard.css\"\r\n// Interfaces\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  role: string;\r\n  faculty: string;\r\n}\r\n\r\ninterface Question {\r\n  id: string;\r\n  question: string;\r\n  options: string[];\r\n  correctAnswer: number;\r\n}\r\n\r\ninterface Questionnaire {\r\n  id: string;\r\n  title: string;\r\n  subject: string;\r\n  questions: Question[];\r\n  status: 'draft' | 'submitted' | 'approved' | 'rejected';\r\n  submittedAt?: string;\r\n  teacherId: string;\r\n  duration: number;\r\n  faculty: string;\r\n}\r\n\r\ninterface TeacherDashboardProps {\r\n  user: User;\r\n  onLogout: () => void;\r\n}\r\n\r\nconst TeacherDashboard: React.FC<TeacherDashboardProps> = ({ user, onLogout }) => {\r\n  const { setUser } = useUser();\r\n\r\n  if (!user || !user.id) {\r\n    return <div>Utilisateur non connecté ou invalide.</div>;\r\n  }\r\n\r\n  const [questionnaires, setQuestionnaires] = useState<Questionnaire[]>([]);\r\n  const [currentQuestionnaire, setCurrentQuestionnaire] = useState<Questionnaire | null>(null);\r\n  const [isCreatingNew, setIsCreatingNew] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const showToast = (title: string, description: string) => {\r\n    alert(`${title}: ${description}`);\r\n  };\r\n\r\n  const createNewQuestionnaire = () => {\r\n    const newQuestionnaire: Questionnaire = {\r\n      id: Date.now().toString(),\r\n      title: '',\r\n      subject: '',\r\n      questions: [],\r\n      status: 'draft',\r\n      teacherId: user.id,\r\n      duration: 60,\r\n      faculty: user.faculty\r\n    };\r\n    setCurrentQuestionnaire(newQuestionnaire);\r\n    setIsCreatingNew(true);\r\n  };\r\n\r\n  const addQuestion = () => {\r\n    if (!currentQuestionnaire) return;\r\n    const newQuestion: Question = {\r\n      id: Date.now().toString(),\r\n      question: '',\r\n      options: ['', '', '', ''],\r\n      correctAnswer: 0\r\n    };\r\n    setCurrentQuestionnaire({\r\n      ...currentQuestionnaire,\r\n      questions: [...currentQuestionnaire.questions, newQuestion]\r\n    });\r\n  };\r\n\r\n  const updateQuestion = (questionId: string, field: keyof Question, value: any) => {\r\n    if (!currentQuestionnaire) return;\r\n    setCurrentQuestionnaire({\r\n      ...currentQuestionnaire,\r\n      questions: currentQuestionnaire.questions.map(q =>\r\n        q.id === questionId ? { ...q, [field]: value } : q\r\n      )\r\n    });\r\n  };\r\n\r\n  const updateQuestionOption = (questionId: string, optionIndex: number, value: string) => {\r\n    if (!currentQuestionnaire) return;\r\n    setCurrentQuestionnaire({\r\n      ...currentQuestionnaire,\r\n      questions: currentQuestionnaire.questions.map(q =>\r\n        q.id === questionId\r\n          ? { ...q, options: q.options.map((opt, idx) => (idx === optionIndex ? value : opt)) }\r\n          : q\r\n      )\r\n    });\r\n  };\r\n\r\n  const removeQuestion = (questionId: string) => {\r\n    if (!currentQuestionnaire) return;\r\n    if (window.confirm('Êtes-vous sûr de vouloir supprimer cette question ?')) {\r\n      setCurrentQuestionnaire({\r\n        ...currentQuestionnaire,\r\n        questions: currentQuestionnaire.questions.filter(q => q.id !== questionId)\r\n      });\r\n    }\r\n  };\r\n\r\n  const saveQuestionnaire = () => {\r\n    if (!currentQuestionnaire) return;\r\n    if (!currentQuestionnaire.title.trim() || !currentQuestionnaire.subject.trim()) {\r\n      return showToast('Erreur', 'Veuillez remplir le titre et la matière');\r\n    }\r\n    if (currentQuestionnaire.questions.length === 0) {\r\n      return showToast('Erreur', 'Veuillez ajouter au moins une question');\r\n    }\r\n    if (isCreatingNew) {\r\n      setQuestionnaires(prev => [...prev, currentQuestionnaire]);\r\n    } else {\r\n      setQuestionnaires(prev =>\r\n        prev.map(q => (q.id === currentQuestionnaire.id ? currentQuestionnaire : q))\r\n      );\r\n    }\r\n    showToast('Succès', 'Questionnaire sauvegardé');\r\n    setCurrentQuestionnaire(null);\r\n    setIsCreatingNew(false);\r\n  };\r\n\r\n  const submitQuestionnaire = async (questionnaire: Questionnaire) => {\r\n    try {\r\n      const payload = {\r\n        title: questionnaire.title,\r\n        subject: questionnaire.subject,\r\n        duration: questionnaire.duration,\r\n        faculty: questionnaire.faculty,\r\n        teacherId: questionnaire.teacherId,\r\n        teacherName: user.name,\r\n        questions: questionnaire.questions.map(q => ({\r\n          question_text: q.question,\r\n          options: q.options,\r\n          correct_answer: q.correctAnswer\r\n        }))\r\n      };\r\n    console.log(\"Payload envoyé :\", payload);\r\n      const response = await\r\n fetch('http://localhost:3001/api/questionnaires/submit', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        return showToast('Erreur', errorText);\r\n      }\r\n\r\n      setQuestionnaires(prev =>\r\n        prev.map(q =>\r\n          q.id === questionnaire.id\r\n            ? { ...questionnaire, status: 'submitted', submittedAt: new Date().toISOString() }\r\n            : q\r\n        )\r\n      );\r\n\r\n      showToast('Succès', 'Questionnaire soumis avec succès !');\r\n      setCurrentQuestionnaire(null);\r\n    } catch (error) {\r\n      console.error('Erreur dans submitQuestionnaire :', error);\r\n      showToast('Erreur', 'Échec de la soumission du questionnaire.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n        <img src=\"https://i.postimg.cc/mZwbqh7Z/1752262954454.jpg\"alt=\"logo UPL\" width=\"60\" height=\"60\" ></img>\r\n      <header className=\"header\">\r\n        <h1>Bienvenue {user.name} 👋</h1>\r\n        <p>Faculté : {user.faculty}</p>\r\n        <button onClick={onLogout}>Déconnexion</button>\r\n      </header>\r\n\r\n      <QuestionnaireList faculty={user.faculty} />\r\n\r\n      <div className=\"create-section\">\r\n        <button onClick={createNewQuestionnaire}>Créer un nouveau questionnaire</button>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Rechercher un questionnaire...\"\r\n          value={searchTerm}\r\n          onChange={e => setSearchTerm(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <h2>Mes Questionnaires</h2>\r\n      {questionnaires\r\n        .filter(q => q.title.toLowerCase().includes(searchTerm.toLowerCase()))\r\n        .map(q => (\r\n          <div key={q.id} className=\"questionnaire-item\">\r\n            <h3>{q.title}</h3>\r\n            <p>Matière : {q.subject}</p>\r\n            <p>Durée : {q.duration} minutes</p>\r\n            <p>{q.questions.length} questions</p>\r\n            <p>Statut : {q.status}</p>\r\n            {q.status === 'draft' && (\r\n              <>\r\n                <button onClick={() => setCurrentQuestionnaire(q)}>Modifier</button>\r\n                <button onClick={() => submitQuestionnaire(q)}>Soumettre</button>\r\n              </>\r\n            )}\r\n          </div>\r\n        ))}\r\n\r\n      {currentQuestionnaire && (\r\n        <div className=\"questionnaire-editor\">\r\n          <h2>{isCreatingNew ? 'Nouveau Questionnaire' : 'Modifier le Questionnaire'}</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={currentQuestionnaire.title}\r\n            placeholder=\"Titre\"\r\n            onChange={e => setCurrentQuestionnaire({ ...currentQuestionnaire, title: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={currentQuestionnaire.subject}\r\n            placeholder=\"Matière\"\r\n            onChange={e => setCurrentQuestionnaire({ ...currentQuestionnaire, subject: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            value={currentQuestionnaire.duration}\r\n            placeholder=\"Durée (minutes)\"\r\n            onChange={e => setCurrentQuestionnaire({\r\n              ...currentQuestionnaire,\r\n              duration: Number(e.target.value)\r\n            })}\r\n          />\r\n          <button onClick={addQuestion}>Ajouter une question</button>\r\n\r\n          {currentQuestionnaire.questions.map((question, index) => (\r\n            <div key={question.id}>\r\n              <textarea\r\n                value={question.question}\r\n                onChange={e => updateQuestion(question.id, 'question', e.target.value)}\r\n                placeholder={`Question ${index + 1}`}\r\n              />\r\n              {question.options.map((opt, optIndex) => (\r\n                <div key={optIndex}>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name={`correct-${question.id}`}\r\n                    checked={question.correctAnswer === optIndex}\r\n                    onChange={() => updateQuestion(question.id, 'correctAnswer', optIndex)}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    value={opt}\r\n                    placeholder={`Option ${optIndex + 1}`}\r\n                    onChange={e => updateQuestionOption(question.id, optIndex, e.target.value)}\r\n                  />\r\n                </div>\r\n              ))}\r\n              <button onClick={() => removeQuestion(question.id)}>Supprimer Question</button>\r\n            </div>\r\n          ))}\r\n\r\n          <button onClick={saveQuestionnaire}>Sauvegarder</button>\r\n          <button onClick={() => { setCurrentQuestionnaire(null); setIsCreatingNew(false); }}>Annuler</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeacherDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}